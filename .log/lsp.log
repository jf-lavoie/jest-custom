[START][2023-03-13 15:52:22] LSP logging initiated
[INFO][2023-03-13 15:52:22] .../vim/lsp/rpc.lua:661	"Starting RPC client"	{  args = { "--stdio", "--log-level=4" },  cmd = "/home/jfl/projects/typescript-language-server/lib/cli.mjs",  extra = {    cwd = "/home/jfl/projects/jest-custom"  }}
[TRACE][2023-03-13 15:52:22] .../lua/vim/lsp.lua:1276	"LSP[tsserver]"	"initialize_params"	{  capabilities = {    callHierarchy = {      dynamicRegistration = false    },    textDocument = {      codeAction = {        codeActionLiteralSupport = {          codeActionKind = {            valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }          }        },        dataSupport = true,        dynamicRegistration = false,        isPreferredSupport = true,        resolveSupport = {          properties = { "edit" }        }      },      completion = {        completionItem = {          commitCharactersSupport = true,          deprecatedSupport = true,          documentationFormat = { "markdown", "plaintext" },          insertReplaceSupport = true,          insertTextModeSupport = {            valueSet = { 1, 2 }          },          labelDetailsSupport = true,          preselectSupport = true,          resolveSupport = {            properties = { "documentation", "detail", "additionalTextEdits" }          },          snippetSupport = true,          tagSupport = {            valueSet = { 1 }          }        },        completionItemKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }        },        completionList = {          itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }        },        contextSupport = true,        dynamicRegistration = false,        insertTextMode = 1      },      declaration = {        linkSupport = true      },      definition = {        linkSupport = true      },      documentHighlight = {        dynamicRegistration = false      },      documentSymbol = {        dynamicRegistration = false,        hierarchicalDocumentSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }        }      },      hover = {        contentFormat = { "markdown", "plaintext" },        dynamicRegistration = false      },      implementation = {        linkSupport = true      },      publishDiagnostics = {        relatedInformation = true,        tagSupport = {          valueSet = { 1, 2 }        }      },      references = {        dynamicRegistration = false      },      rename = {        dynamicRegistration = false,        prepareSupport = true      },      signatureHelp = {        dynamicRegistration = false,        signatureInformation = {          activeParameterSupport = true,          documentationFormat = { "markdown", "plaintext" },          parameterInformation = {            labelOffsetSupport = true          }        }      },      synchronization = {        didSave = true,        dynamicRegistration = false,        willSave = false,        willSaveWaitUntil = false      },      typeDefinition = {        linkSupport = true      }    },    window = {      showDocument = {        support = false      },      showMessage = {        messageActionItem = {          additionalPropertiesSupport = false        }      },      workDoneProgress = true    },    workspace = {      applyEdit = true,      configuration = true,      symbol = {        dynamicRegistration = false,        hierarchicalWorkspaceSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }        }      },      workspaceEdit = {        resourceOperations = { "rename", "create", "delete" }      },      workspaceFolders = true    }  },  clientInfo = {    name = "Neovim",    version = "0.8.2"  },  initializationOptions = {    hostInfo = "neovim",    tsserver = {      logDirectory = "/home/jfl/projects/jest-custom/.log/",      logVerbosity = "verbose",      trace = "verbose"    }  },  processId = 837910,  rootPath = "/home/jfl/projects/jest-custom",  rootUri = "file:///home/jfl/projects/jest-custom",  trace = "off",  workspaceFolders = { {      name = "/home/jfl/projects/jest-custom",      uri = "file:///home/jfl/projects/jest-custom"    } }}
[DEBUG][2023-03-13 15:52:22] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 1,  jsonrpc = "2.0",  method = "initialize",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false      },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }            }          },          dataSupport = true,          dynamicRegistration = false,          isPreferredSupport = true,          resolveSupport = {            properties = { "edit" }          }        },        completion = {          completionItem = {            commitCharactersSupport = true,            deprecatedSupport = true,            documentationFormat = { "markdown", "plaintext" },            insertReplaceSupport = true,            insertTextModeSupport = {              valueSet = { 1, 2 }            },            labelDetailsSupport = true,            preselectSupport = true,            resolveSupport = {              properties = { "documentation", "detail", "additionalTextEdits" }            },            snippetSupport = true,            tagSupport = {              valueSet = { 1 }            }          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }          },          completionList = {            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }          },          contextSupport = true,          dynamicRegistration = false,          insertTextMode = 1        },        declaration = {          linkSupport = true        },        definition = {          linkSupport = true        },        documentHighlight = {          dynamicRegistration = false        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        hover = {          contentFormat = { "markdown", "plaintext" },          dynamicRegistration = false        },        implementation = {          linkSupport = true        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 }          }        },        references = {          dynamicRegistration = false        },        rename = {          dynamicRegistration = false,          prepareSupport = true        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { "markdown", "plaintext" },            parameterInformation = {              labelOffsetSupport = true            }          }        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false        },        typeDefinition = {          linkSupport = true        }      },      window = {        showDocument = {          support = false        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false          }        },        workDoneProgress = true      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        workspaceEdit = {          resourceOperations = { "rename", "create", "delete" }        },        workspaceFolders = true      }    },    clientInfo = {      name = "Neovim",      version = "0.8.2"    },    initializationOptions = {      hostInfo = "neovim",      tsserver = {        logDirectory = "/home/jfl/projects/jest-custom/.log/",        logVerbosity = "verbose",        trace = "verbose"      }    },    processId = 837910,    rootPath = "/home/jfl/projects/jest-custom",    rootUri = "file:///home/jfl/projects/jest-custom",    trace = "off",    workspaceFolders = { {        name = "/home/jfl/projects/jest-custom",        uri = "file:///home/jfl/projects/jest-custom"      } }  }}
[TRACE][2023-03-13 15:52:22] .../lua/vim/lsp.lua:1276	"LSP[null-ls]"	"initialize_params"	{  capabilities = {    callHierarchy = {      dynamicRegistration = false    },    textDocument = {      codeAction = {        codeActionLiteralSupport = {          codeActionKind = {            valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }          }        },        dataSupport = true,        dynamicRegistration = false,        isPreferredSupport = true,        resolveSupport = {          properties = { "edit" }        }      },      completion = {        completionItem = {          commitCharactersSupport = false,          deprecatedSupport = false,          documentationFormat = { "markdown", "plaintext" },          preselectSupport = false,          snippetSupport = false        },        completionItemKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }        },        contextSupport = false,        dynamicRegistration = false      },      declaration = {        linkSupport = true      },      definition = {        linkSupport = true      },      documentHighlight = {        dynamicRegistration = false      },      documentSymbol = {        dynamicRegistration = false,        hierarchicalDocumentSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }        }      },      hover = {        contentFormat = { "markdown", "plaintext" },        dynamicRegistration = false      },      implementation = {        linkSupport = true      },      publishDiagnostics = {        relatedInformation = true,        tagSupport = {          valueSet = { 1, 2 }        }      },      references = {        dynamicRegistration = false      },      rename = {        dynamicRegistration = false,        prepareSupport = true      },      signatureHelp = {        dynamicRegistration = false,        signatureInformation = {          activeParameterSupport = true,          documentationFormat = { "markdown", "plaintext" },          parameterInformation = {            labelOffsetSupport = true          }        }      },      synchronization = {        didSave = true,        dynamicRegistration = false,        willSave = false,        willSaveWaitUntil = false      },      typeDefinition = {        linkSupport = true      }    },    window = {      showDocument = {        support = false      },      showMessage = {        messageActionItem = {          additionalPropertiesSupport = false        }      },      workDoneProgress = true    },    workspace = {      applyEdit = true,      configuration = true,      symbol = {        dynamicRegistration = false,        hierarchicalWorkspaceSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }        }      },      workspaceEdit = {        resourceOperations = { "rename", "create", "delete" }      },      workspaceFolders = true    }  },  clientInfo = {    name = "Neovim",    version = "0.8.2"  },  processId = 837910,  rootPath = "/home/jfl/projects/jest-custom",  rootUri = "file:///home/jfl/projects/jest-custom",  trace = "off",  workspaceFolders = { {      name = "/home/jfl/projects/jest-custom",      uri = "file:///home/jfl/projects/jest-custom"    } }}
[INFO][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1336	"LSP[null-ls]"	"server_capabilities"	{  server_capabilities = {    codeActionProvider = {      resolveProvider = false    },    completionProvider = {      allCommitCharacters = {},      completionItem = {        labelDetailsSupport = true      },      resolveProvider = false,      triggerCharacters = { ".", ":", "-" }    },    documentFormattingProvider = true,    documentRangeFormattingProvider = true,    executeCommandProvider = true,    hoverProvider = true,    textDocumentSync = {      change = 1,      openClose = true,      save = {        includeText = true      }    }  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[lspserver] initialize {\n  "processId": 837910,\n  "clientInfo": {\n    "name": "Neovim",\n    "version": "0.8.2"\n  },\n  "capabilities": {\n    "callHierarchy": {\n      "dynamicRegistration": false\n    },\n    "textDocument": {\n      "signatureHelp": {\n        "dynamicRegistration": false,\n        "signatureInformation": {\n          "documentationFormat": [\n            "markdown",\n            "plaintext"\n          ],\n          "parameterInformation": {\n            "labelOffsetSupport": true\n          },\n          "activeParameterSupport": true\n        }\n      },\n      "hover": {\n        "dynamicRegistration": false,\n        "contentFormat": [\n          "markdown",\n          "plaintext"\n        ]\n      },\n      "completion": {\n        "insertTextMode": 1,\n        "contextSupport": true,\n        "completionItem": {\n          "resolveSupport": {\n            "properties": [\n              "documentation",\n              "detail",\n              "additionalTextEdits"\n            ]\n          },\n          "snippetSupport": true,\n          "insertReplaceSupport": true,\n          "preselectSupport": true,\n          "deprecatedSupport": true,\n          "labelDetailsSupport": true,\n          "documentationFormat": [\n            "markdown",\n            "plaintext"\n          ],\n          "commitCharactersSupport": true,\n          "tagSupport": {\n            "valueSet": [\n              1\n            ]\n          },\n          "insertTextModeSupport": {\n            "valueSet": [\n              1,\n              2\n            ]\n          }\n        },\n        "completionItemKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25\n          ]\n        },\n        "dynamicRegistration": false,\n        "completionList": {\n          "itemDefaults": [\n            "commitCharacters",\n            "editRange",\n            "insertTextFormat",\n            "insertTextMode",\n            "data"\n          ]\n        }\n      },\n      "synchronization": {\n        "willSaveWaitUntil": false,\n        "didSave": true,\n        "dynamicRegistration": false,\n        "willSave": false\n      },\n      "references": {\n        "dynamicRegistration": false\n      },\n      "documentHighlight": {\n        "dynamicRegistration": false\n      },\n      "documentSymbol": {\n        "symbolKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26\n          ]\n        },\n        "dynamicRegistration": false,\n        "hierarchicalDocumentSymbolSupport": true\n      },\n      "rename": {\n        "dynamicRegistration": false,\n        "prepareSupport": true\n      },\n      "codeAction": {\n        "dataSupport": true,\n        "resolveSupport": {\n          "properties": [\n            "edit"\n          ]\n        },\n        "codeActionLiteralSupport": {\n          "codeActionKind": {\n            "valueSet": [\n              "",\n              "Empty",\n              "QuickFix",\n              "Refactor",\n              "RefactorExtract",\n              "RefactorInline",\n              "RefactorRewrite",\n              "Source",\n              "SourceOrganizeImports",\n              "quickfix",\n              "refactor",\n              "refactor.extract",\n              "refactor.inline",\n              "refactor.rewrite",\n              "source",\n              "source.organizeImports"\n            ]\n          }\n        },\n        "dynamicRegistration": false,\n        "isPreferredSupport": true\n      },\n      "declaration": {\n        "linkSupport": true\n      },\n      "publishDiagnostics": {\n        "tagSupport": {\n          "valueSet": [\n            1,\n            2\n          ]\n        },\n        "relatedInformation": true\n      },\n      "definition": {\n        "linkSupport": true\n      },\n      "implementation": {\n        "linkSupport": true\n      },\n      "typeDefinition": {\n        "linkSupport": true\n      }\n    },\n    "workspace": {\n      "workspaceFolders": true,\n      "applyEdit": true,\n      "workspaceEdit": {\n        "resourceOperations": [\n          "rename",\n          "create",\n          "delete"\n        ]\n      },\n      "symbol": {\n        "symbolKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26\n          ]\n        },\n        "dynamicRegistration": false,\n        "hierarchicalWorkspaceSymbolSupport": true\n      },\n      "configuration": true\n    },\n    "window": {\n      "showDocument": {\n        "support": false\n      },\n      "workDoneProgress": true,\n      "showMessage": {\n        "messageActionItem": {\n          "additionalPropertiesSupport": false\n        }\n      }\n    }\n  },\n  "trace": "off",\n  "rootPath": "/home/jfl/projects/jest-custom",\n  "initializationOptions": {\n    "tsserver": {\n      "trace": "verbose",\n      "logVerbosity": "verbose",\n      "logDirectory": "/home/jfl/projects/jest-custom/.log/"\n    },\n    "hostInfo": "neovim"\n  },\n  "workspaceFolders": [\n    {\n      "uri": "file:///home/jfl/projects/jest-custom",\n      "name": "/home/jfl/projects/jest-custom"\n    }\n  ],\n  "rootUri": "file:///home/jfl/projects/jest-custom"\n}',    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[lspserver] Resolving TypeScript version from path "/home/jfl/projects/jest-custom/node_modules/typescript/lib/tsserver.js"...',    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[lspserver] Reading version from package.json at "/home/jfl/projects/jest-custom/node_modules/typescript/package.json"',    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[lspserver] Resolved TypeScript version to "4.9.5"',    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = 'Using Typescript version (workspace) 4.9.5 from path "/home/jfl/projects/jest-custom/node_modules/typescript/lib/tsserver.js"',    type = 2  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsclient] <syntax> Log file: /home/jfl/projects/jest-custom/.log/tsserver-log-yQ2MCg/tsserver.log",    type = 3  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsclient] Starting tsserver",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsclient] <semantic> Log file: /home/jfl/projects/jest-custom/.log/tsserver-log-jFbiZM/tsserver.log",    type = 3  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsclient] Starting tsserver",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 0,  jsonrpc = "2.0",  method = "window/workDoneProgress/create",  params = {    token = "1f8cab6e-6114-4ecc-aafe-8238990ea313"  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.87] <syntax> Sending request: configure (0). Response expected: yes. Current queue length: 0",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Arguments: {\n    "hostInfo": "neovim",\n    "formatOptions": {\n        "newLineCharacter": "\\n"\n    },\n    "preferences": {\n        "allowIncompleteCompletions": true,\n        "allowRenameOfImportPath": true,\n        "allowTextChangesInNewFiles": true,\n        "disableLineTextInReferences": true,\n        "disableSuggestions": false,\n        "displayPartsForJSDoc": true,\n        "generateReturnInDocTemplate": true,\n        "importModuleSpecifierEnding": "auto",\n        "importModuleSpecifierPreference": "shortest",\n        "includeAutomaticOptionalChainCompletions": true,\n        "includeCompletionsForImportStatements": true,\n        "includeCompletionsForModuleExports": true,\n        "includeCompletionsWithClassMemberSnippets": true,\n        "includeCompletionsWithInsertText": true,\n        "includeCompletionsWithObjectLiteralMethodSnippets": true,\n        "includeCompletionsWithSnippetText": true,\n        "includeInlayEnumMemberValueHints": false,\n        "includeInlayFunctionLikeReturnTypeHints": false,\n        "includeInlayFunctionParameterTypeHints": false,\n        "includeInlayParameterNameHints": "none",\n        "includeInlayParameterNameHintsWhenArgumentMatchesName": false,\n        "includeInlayPropertyDeclarationTypeHints": false,\n        "includeInlayVariableTypeHints": false,\n        "includeInlayVariableTypeHintsWhenTypeMatchesName": false,\n        "includePackageJsonAutoImports": "auto",\n        "jsxAttributeCompletionStyle": "auto",\n        "lazyConfiguredProjectsFromExternalProject": false,\n        "providePrefixAndSuffixTextForRename": true,\n        "provideRefactorNotApplicableReason": true,\n        "quotePreference": "auto",\n        "useLabelDetailsInCompletionEntries": true\n    }\n}',    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.88] <semantic> Sending request: configure (0). Response expected: yes. Current queue length: 0",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Arguments: {\n    "hostInfo": "neovim",\n    "formatOptions": {\n        "newLineCharacter": "\\n"\n    },\n    "preferences": {\n        "allowIncompleteCompletions": true,\n        "allowRenameOfImportPath": true,\n        "allowTextChangesInNewFiles": true,\n        "disableLineTextInReferences": true,\n        "disableSuggestions": false,\n        "displayPartsForJSDoc": true,\n        "generateReturnInDocTemplate": true,\n        "importModuleSpecifierEnding": "auto",\n        "importModuleSpecifierPreference": "shortest",\n        "includeAutomaticOptionalChainCompletions": true,\n        "includeCompletionsForImportStatements": true,\n        "includeCompletionsForModuleExports": true,\n        "includeCompletionsWithClassMemberSnippets": true,\n        "includeCompletionsWithInsertText": true,\n        "includeCompletionsWithObjectLiteralMethodSnippets": true,\n        "includeCompletionsWithSnippetText": true,\n        "includeInlayEnumMemberValueHints": false,\n        "includeInlayFunctionLikeReturnTypeHints": false,\n        "includeInlayFunctionParameterTypeHints": false,\n        "includeInlayParameterNameHints": "none",\n        "includeInlayParameterNameHintsWhenArgumentMatchesName": false,\n        "includeInlayPropertyDeclarationTypeHints": false,\n        "includeInlayVariableTypeHints": false,\n        "includeInlayVariableTypeHintsWhenTypeMatchesName": false,\n        "includePackageJsonAutoImports": "auto",\n        "jsxAttributeCompletionStyle": "auto",\n        "lazyConfiguredProjectsFromExternalProject": false,\n        "providePrefixAndSuffixTextForRename": true,\n        "provideRefactorNotApplicableReason": true,\n        "quotePreference": "auto",\n        "useLabelDetailsInCompletionEntries": true\n    }\n}',    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[lspserver] onInitialize result {\n  \"capabilities\": {\n    \"textDocumentSync\": 2,\n    \"completionProvider\": {\n      \"triggerCharacters\": [\n        \".\",\n        \"\\\"\",\n        \"'\",\n        \"/\",\n        \"@\",\n        \"<\"\n      ],\n      \"resolveProvider\": true\n    },\n    \"codeActionProvider\": {\n      \"codeActionKinds\": [\n        \"source.fixAll.ts\",\n        \"source.removeUnused.ts\",\n        \"source.addMissingImports.ts\",\n        \"source.organizeImports.ts\",\n        \"source.removeUnusedImports.ts\",\n        \"source.sortImports.ts\",\n        \"quickfix\",\n        \"refactor\"\n      ]\n    },\n    \"definitionProvider\": true,\n    \"documentFormattingProvider\": true,\n    \"documentRangeFormattingProvider\": true,\n    \"documentHighlightProvider\": true,\n    \"documentSymbolProvider\": true,\n    \"executeCommandProvider\": {\n      \"commands\": [\n        \"_typescript.applyWorkspaceEdit\",\n        \"_typescript.applyCodeAction\",\n        \"_typescript.applyRefactoring\",\n        \"_typescript.configurePlugin\",\n        \"_typescript.organizeImports\",\n        \"_typescript.applyRenameFile\",\n        \"_typescript.goToSourceDefinition\"\n      ]\n    },\n    \"hoverProvider\": true,\n    \"inlayHintProvider\": true,\n    \"renameProvider\": {\n      \"prepareProvider\": true\n    },\n    \"referencesProvider\": true,\n    \"selectionRangeProvider\": true,\n    \"signatureHelpProvider\": {\n      \"triggerCharacters\": [\n        \"(\",\n        \",\",\n        \"<\"\n      ],\n      \"retriggerCharacters\": [\n        \")\"\n      ]\n    },\n    \"workspaceSymbolProvider\": true,\n    \"implementationProvider\": true,\n    \"typeDefinitionProvider\": true,\n    \"foldingRangeProvider\": true,\n    \"semanticTokensProvider\": {\n      \"documentSelector\": null,\n      \"legend\": {\n        \"tokenTypes\": [\n          \"class\",\n          \"enum\",\n          \"interface\",\n          \"namespace\",\n          \"typeParameter\",\n          \"type\",\n          \"parameter\",\n          \"variable\",\n          \"enumMember\",\n          \"property\",\n          \"function\",\n          \"member\"\n        ],\n        \"tokenModifiers\": [\n          \"declaration\",\n          \"static\",\n          \"async\",\n          \"readonly\",\n          \"defaultLibrary\",\n          \"local\"\n        ]\n      },\n      \"full\": true,\n      \"range\": true\n    },\n    \"workspace\": {\n      \"fileOperations\": {\n        \"willRename\": {\n          \"filters\": [\n            {\n              \"scheme\": \"file\",\n              \"pattern\": {\n                \"glob\": \"**/*.{ts,js,jsx,tsx,mjs,mts,cjs,cts}\",\n                \"matches\": \"file\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 1,  jsonrpc = "2.0",  result = {    capabilities = {      codeActionProvider = {        codeActionKinds = { "source.fixAll.ts", "source.removeUnused.ts", "source.addMissingImports.ts", "source.organizeImports.ts", "source.removeUnusedImports.ts", "source.sortImports.ts", "quickfix", "refactor" }      },      completionProvider = {        resolveProvider = true,        triggerCharacters = { ".", '"', "'", "/", "@", "<" }      },      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { "_typescript.applyWorkspaceEdit", "_typescript.applyCodeAction", "_typescript.applyRefactoring", "_typescript.configurePlugin", "_typescript.organizeImports", "_typescript.applyRenameFile", "_typescript.goToSourceDefinition" }      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      inlayHintProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = true,        legend = {          tokenModifiers = { "declaration", "static", "async", "readonly", "defaultLibrary", "local" },          tokenTypes = { "class", "enum", "interface", "namespace", "typeParameter", "type", "parameter", "variable", "enumMember", "property", "function", "member" }        },        range = true      },      signatureHelpProvider = {        retriggerCharacters = { ")" },        triggerCharacters = { "(", ",", "<" }      },      textDocumentSync = 2,      typeDefinitionProvider = true,      workspace = {        fileOperations = {          willRename = {            filters = { {                pattern = {                  glob = "**/*.{ts,js,jsx,tsx,mjs,mts,cjs,cts}",                  matches = "file"                },                scheme = "file"              } }          }        }      },      workspaceSymbolProvider = true    }  }}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	nil	{  ctx = "{\n  client_id = 2\n}",  result = {    token = 1,    value = {      kind = "begin",      percentage = 0,      title = "diagnostics_on_open"    }  }}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	nil	{  ctx = "{\n  client_id = 2\n}",  result = {    token = 1,    value = {      kind = "report",      message = "eslint_d",      percentage = 0    }  }}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	nil	{  ctx = "{\n  client_id = 2\n}",  result = {    token = 2,    value = {      kind = "begin",      percentage = 0,      title = "diagnostics_on_open"    }  }}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	nil	{  ctx = "{\n  client_id = 2\n}",  result = {    token = 2,    value = {      kind = "report",      message = "eslint_d",      percentage = 0    }  }}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[lspserver] initialize {\n  "processId": 837910,\n  "clientInfo": {\n    "name": "Neovim",\n    "version": "0.8.2"\n  },\n  "capabilities": {\n    "callHierarchy": {\n      "dynamicRegistration": false\n    },\n    "textDocument": {\n      "signatureHelp": {\n        "dynamicRegistration": false,\n        "signatureInformation": {\n          "documentationFormat": [\n            "markdown",\n            "plaintext"\n          ],\n          "parameterInformation": {\n            "labelOffsetSupport": true\n          },\n          "activeParameterSupport": true\n        }\n      },\n      "hover": {\n        "dynamicRegistration": false,\n        "contentFormat": [\n          "markdown",\n          "plaintext"\n        ]\n      },\n      "completion": {\n        "insertTextMode": 1,\n        "contextSupport": true,\n        "completionItem": {\n          "resolveSupport": {\n            "properties": [\n              "documentation",\n              "detail",\n              "additionalTextEdits"\n            ]\n          },\n          "snippetSupport": true,\n          "insertReplaceSupport": true,\n          "preselectSupport": true,\n          "deprecatedSupport": true,\n          "labelDetailsSupport": true,\n          "documentationFormat": [\n            "markdown",\n            "plaintext"\n          ],\n          "commitCharactersSupport": true,\n          "tagSupport": {\n            "valueSet": [\n              1\n            ]\n          },\n          "insertTextModeSupport": {\n            "valueSet": [\n              1,\n              2\n            ]\n          }\n        },\n        "completionItemKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25\n          ]\n        },\n        "dynamicRegistration": false,\n        "completionList": {\n          "itemDefaults": [\n            "commitCharacters",\n            "editRange",\n            "insertTextFormat",\n            "insertTextMode",\n            "data"\n          ]\n        }\n      },\n      "synchronization": {\n        "willSaveWaitUntil": false,\n        "didSave": true,\n        "dynamicRegistration": false,\n        "willSave": false\n      },\n      "references": {\n        "dynamicRegistration": false\n      },\n      "documentHighlight": {\n        "dynamicRegistration": false\n      },\n      "documentSymbol": {\n        "symbolKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26\n          ]\n        },\n        "dynamicRegistration": false,\n        "hierarchicalDocumentSymbolSupport": true\n      },\n      "rename": {\n        "dynamicRegistration": false,\n        "prepareSupport": true\n      },\n      "codeAction": {\n        "dataSupport": true,\n        "resolveSupport": {\n          "properties": [\n            "edit"\n          ]\n        },\n        "codeActionLiteralSupport": {\n          "codeActionKind": {\n            "valueSet": [\n              "",\n              "Empty",\n              "QuickFix",\n              "Refactor",\n              "RefactorExtract",\n              "RefactorInline",\n              "RefactorRewrite",\n              "Source",\n              "SourceOrganizeImports",\n              "quickfix",\n              "refactor",\n              "refactor.extract",\n              "refactor.inline",\n              "refactor.rewrite",\n              "source",\n              "source.organizeImports"\n            ]\n          }\n        },\n        "dynamicRegistration": false,\n        "isPreferredSupport": true\n      },\n      "declaration": {\n        "linkSupport": true\n      },\n      "publishDiagnostics": {\n        "tagSupport": {\n          "valueSet": [\n            1,\n            2\n          ]\n        },\n        "relatedInformation": true\n      },\n      "definition": {\n        "linkSupport": true\n      },\n      "implementation": {\n        "linkSupport": true\n      },\n      "typeDefinition": {\n        "linkSupport": true\n      }\n    },\n    "workspace": {\n      "workspaceFolders": true,\n      "applyEdit": true,\n      "workspaceEdit": {\n        "resourceOperations": [\n          "rename",\n          "create",\n          "delete"\n        ]\n      },\n      "symbol": {\n        "symbolKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26\n          ]\n        },\n        "dynamicRegistration": false,\n        "hierarchicalWorkspaceSymbolSupport": true\n      },\n      "configuration": true\n    },\n    "window": {\n      "showDocument": {\n        "support": false\n      },\n      "workDoneProgress": true,\n      "showMessage": {\n        "messageActionItem": {\n          "additionalPropertiesSupport": false\n        }\n      }\n    }\n  },\n  "trace": "off",\n  "rootPath": "/home/jfl/projects/jest-custom",\n  "initializationOptions": {\n    "tsserver": {\n      "trace": "verbose",\n      "logVerbosity": "verbose",\n      "logDirectory": "/home/jfl/projects/jest-custom/.log/"\n    },\n    "hostInfo": "neovim"\n  },\n  "workspaceFolders": [\n    {\n      "uri": "file:///home/jfl/projects/jest-custom",\n      "name": "/home/jfl/projects/jest-custom"\n    }\n  ],\n  "rootUri": "file:///home/jfl/projects/jest-custom"\n}',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[lspserver] initialize {\n  "processId": 837910,\n  "clientInfo": {\n    "name": "Neovim",\n    "version": "0.8.2"\n  },\n  "capabilities": {\n    "callHierarchy": {\n      "dynamicRegistration": false\n    },\n    "textDocument": {\n      "signatureHelp": {\n        "dynamicRegistration": false,\n        "signatureInformation": {\n          "documentationFormat": [\n            "markdown",\n            "plaintext"\n          ],\n          "parameterInformation": {\n            "labelOffsetSupport": true\n          },\n          "activeParameterSupport": true\n        }\n      },\n      "hover": {\n        "dynamicRegistration": false,\n        "contentFormat": [\n          "markdown",\n          "plaintext"\n        ]\n      },\n      "completion": {\n        "insertTextMode": 1,\n        "contextSupport": true,\n        "completionItem": {\n          "resolveSupport": {\n            "properties": [\n              "documentation",\n              "detail",\n              "additionalTextEdits"\n            ]\n          },\n          "snippetSupport": true,\n          "insertReplaceSupport": true,\n          "preselectSupport": true,\n          "deprecatedSupport": true,\n          "labelDetailsSupport": true,\n          "documentationFormat": [\n            "markdown",\n            "plaintext"\n          ],\n          "commitCharactersSupport": true,\n          "tagSupport": {\n            "valueSet": [\n              1\n            ]\n          },\n          "insertTextModeSupport": {\n            "valueSet": [\n              1,\n              2\n            ]\n          }\n        },\n        "completionItemKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25\n          ]\n        },\n        "dynamicRegistration": false,\n        "completionList": {\n          "itemDefaults": [\n            "commitCharacters",\n            "editRange",\n            "insertTextFormat",\n            "insertTextMode",\n            "data"\n          ]\n        }\n      },\n      "synchronization": {\n        "willSaveWaitUntil": false,\n        "didSave": true,\n        "dynamicRegistration": false,\n        "willSave": false\n      },\n      "references": {\n        "dynamicRegistration": false\n      },\n      "documentHighlight": {\n        "dynamicRegistration": false\n      },\n      "documentSymbol": {\n        "symbolKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26\n          ]\n        },\n        "dynamicRegistration": false,\n        "hierarchicalDocumentSymbolSupport": true\n      },\n      "rename": {\n        "dynamicRegistration": false,\n        "prepareSupport": true\n      },\n      "codeAction": {\n        "dataSupport": true,\n        "resolveSupport": {\n          "properties": [\n            "edit"\n          ]\n        },\n        "codeActionLiteralSupport": {\n          "codeActionKind": {\n            "valueSet": [\n              "",\n              "Empty",\n              "QuickFix",\n              "Refactor",\n              "RefactorExtract",\n              "RefactorInline",\n              "RefactorRewrite",\n              "Source",\n              "SourceOrganizeImports",\n              "quickfix",\n              "refactor",\n              "refactor.extract",\n              "refactor.inline",\n              "refactor.rewrite",\n              "source",\n              "source.organizeImports"\n            ]\n          }\n        },\n        "dynamicRegistration": false,\n        "isPreferredSupport": true\n      },\n      "declaration": {\n        "linkSupport": true\n      },\n      "publishDiagnostics": {\n        "tagSupport": {\n          "valueSet": [\n            1,\n            2\n          ]\n        },\n        "relatedInformation": true\n      },\n      "definition": {\n        "linkSupport": true\n      },\n      "implementation": {\n        "linkSupport": true\n      },\n      "typeDefinition": {\n        "linkSupport": true\n      }\n    },\n    "workspace": {\n      "workspaceFolders": true,\n      "applyEdit": true,\n      "workspaceEdit": {\n        "resourceOperations": [\n          "rename",\n          "create",\n          "delete"\n        ]\n      },\n      "symbol": {\n        "symbolKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26\n          ]\n        },\n        "dynamicRegistration": false,\n        "hierarchicalWorkspaceSymbolSupport": true\n      },\n      "configuration": true\n    },\n    "window": {\n      "showDocument": {\n        "support": false\n      },\n      "workDoneProgress": true,\n      "showMessage": {\n        "messageActionItem": {\n          "additionalPropertiesSupport": false\n        }\n      }\n    }\n  },\n  "trace": "off",\n  "rootPath": "/home/jfl/projects/jest-custom",\n  "initializationOptions": {\n    "tsserver": {\n      "trace": "verbose",\n      "logVerbosity": "verbose",\n      "logDirectory": "/home/jfl/projects/jest-custom/.log/"\n    },\n    "hostInfo": "neovim"\n  },\n  "workspaceFolders": [\n    {\n      "uri": "file:///home/jfl/projects/jest-custom",\n      "name": "/home/jfl/projects/jest-custom"\n    }\n  ],\n  "rootUri": "file:///home/jfl/projects/jest-custom"\n}',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[lspserver] initialize {\n  "processId": 837910,\n  "clientInfo": {\n    "name": "Neovim",\n    "version": "0.8.2"\n  },\n  "capabilities": {\n    "callHierarchy": {\n      "dynamicRegistration": false\n    },\n    "textDocument": {\n      "signatureHelp": {\n        "dynamicRegistration": false,\n        "signatureInformation": {\n          "documentationFormat": [\n            "markdown",\n            "plaintext"\n          ],\n          "parameterInformation": {\n            "labelOffsetSupport": true\n          },\n          "activeParameterSupport": true\n        }\n      },\n      "hover": {\n        "dynamicRegistration": false,\n        "contentFormat": [\n          "markdown",\n          "plaintext"\n        ]\n      },\n      "completion": {\n        "insertTextMode": 1,\n        "contextSupport": true,\n        "completionItem": {\n          "resolveSupport": {\n            "properties": [\n              "documentation",\n              "detail",\n              "additionalTextEdits"\n            ]\n          },\n          "snippetSupport": true,\n          "insertReplaceSupport": true,\n          "preselectSupport": true,\n          "deprecatedSupport": true,\n          "labelDetailsSupport": true,\n          "documentationFormat": [\n            "markdown",\n            "plaintext"\n          ],\n          "commitCharactersSupport": true,\n          "tagSupport": {\n            "valueSet": [\n              1\n            ]\n          },\n          "insertTextModeSupport": {\n            "valueSet": [\n              1,\n              2\n            ]\n          }\n        },\n        "completionItemKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25\n          ]\n        },\n        "dynamicRegistration": false,\n        "completionList": {\n          "itemDefaults": [\n            "commitCharacters",\n            "editRange",\n            "insertTextFormat",\n            "insertTextMode",\n            "data"\n          ]\n        }\n      },\n      "synchronization": {\n        "willSaveWaitUntil": false,\n        "didSave": true,\n        "dynamicRegistration": false,\n        "willSave": false\n      },\n      "references": {\n        "dynamicRegistration": false\n      },\n      "documentHighlight": {\n        "dynamicRegistration": false\n      },\n      "documentSymbol": {\n        "symbolKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26\n          ]\n        },\n        "dynamicRegistration": false,\n        "hierarchicalDocumentSymbolSupport": true\n      },\n      "rename": {\n        "dynamicRegistration": false,\n        "prepareSupport": true\n      },\n      "codeAction": {\n        "dataSupport": true,\n        "resolveSupport": {\n          "properties": [\n            "edit"\n          ]\n        },\n        "codeActionLiteralSupport": {\n          "codeActionKind": {\n            "valueSet": [\n              "",\n              "Empty",\n              "QuickFix",\n              "Refactor",\n              "RefactorExtract",\n              "RefactorInline",\n              "RefactorRewrite",\n              "Source",\n              "SourceOrganizeImports",\n              "quickfix",\n              "refactor",\n              "refactor.extract",\n              "refactor.inline",\n              "refactor.rewrite",\n              "source",\n              "source.organizeImports"\n            ]\n          }\n        },\n        "dynamicRegistration": false,\n        "isPreferredSupport": true\n      },\n      "declaration": {\n        "linkSupport": true\n      },\n      "publishDiagnostics": {\n        "tagSupport": {\n          "valueSet": [\n            1,\n            2\n          ]\n        },\n        "relatedInformation": true\n      },\n      "definition": {\n        "linkSupport": true\n      },\n      "implementation": {\n        "linkSupport": true\n      },\n      "typeDefinition": {\n        "linkSupport": true\n      }\n    },\n    "workspace": {\n      "workspaceFolders": true,\n      "applyEdit": true,\n      "workspaceEdit": {\n        "resourceOperations": [\n          "rename",\n          "create",\n          "delete"\n        ]\n      },\n      "symbol": {\n        "symbolKind": {\n          "valueSet": [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26\n          ]\n        },\n        "dynamicRegistration": false,\n        "hierarchicalWorkspaceSymbolSupport": true\n      },\n      "configuration": true\n    },\n    "window": {\n      "showDocument": {\n        "support": false\n      },\n      "workDoneProgress": true,\n      "showMessage": {\n        "messageActionItem": {\n          "additionalPropertiesSupport": false\n        }\n      }\n    }\n  },\n  "trace": "off",\n  "rootPath": "/home/jfl/projects/jest-custom",\n  "initializationOptions": {\n    "tsserver": {\n      "trace": "verbose",\n      "logVerbosity": "verbose",\n      "logDirectory": "/home/jfl/projects/jest-custom/.log/"\n    },\n    "hostInfo": "neovim"\n  },\n  "workspaceFolders": [\n    {\n      "uri": "file:///home/jfl/projects/jest-custom",\n      "name": "/home/jfl/projects/jest-custom"\n    }\n  ],\n  "rootUri": "file:///home/jfl/projects/jest-custom"\n}'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[lspserver] Resolving TypeScript version from path "/home/jfl/projects/jest-custom/node_modules/typescript/lib/tsserver.js"...',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[lspserver] Resolving TypeScript version from path "/home/jfl/projects/jest-custom/node_modules/typescript/lib/tsserver.js"...',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[lspserver] Resolving TypeScript version from path "/home/jfl/projects/jest-custom/node_modules/typescript/lib/tsserver.js"...'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[lspserver] Reading version from package.json at "/home/jfl/projects/jest-custom/node_modules/typescript/package.json"',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[lspserver] Reading version from package.json at "/home/jfl/projects/jest-custom/node_modules/typescript/package.json"',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[lspserver] Reading version from package.json at "/home/jfl/projects/jest-custom/node_modules/typescript/package.json"'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[lspserver] Resolved TypeScript version to "4.9.5"',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[lspserver] Resolved TypeScript version to "4.9.5"',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[lspserver] Resolved TypeScript version to "4.9.5"'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = 'Using Typescript version (workspace) 4.9.5 from path "/home/jfl/projects/jest-custom/node_modules/typescript/lib/tsserver.js"',  type = 2}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = 'Using Typescript version (workspace) 4.9.5 from path "/home/jfl/projects/jest-custom/node_modules/typescript/lib/tsserver.js"',    type = 2  }}
[WARN][2023-03-13 15:52:23] ...lsp/handlers.lua:487	'Using Typescript version (workspace) 4.9.5 from path "/home/jfl/projects/jest-custom/node_modules/typescript/lib/tsserver.js"'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsclient] <syntax> Log file: /home/jfl/projects/jest-custom/.log/tsserver-log-yQ2MCg/tsserver.log",  type = 3}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsclient] <syntax> Log file: /home/jfl/projects/jest-custom/.log/tsserver-log-yQ2MCg/tsserver.log",    type = 3  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsclient] <syntax> Log file: /home/jfl/projects/jest-custom/.log/tsserver-log-yQ2MCg/tsserver.log"
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsclient] Starting tsserver",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsclient] Starting tsserver",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsclient] Starting tsserver"
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsclient] <semantic> Log file: /home/jfl/projects/jest-custom/.log/tsserver-log-jFbiZM/tsserver.log",  type = 3}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsclient] <semantic> Log file: /home/jfl/projects/jest-custom/.log/tsserver-log-jFbiZM/tsserver.log",    type = 3  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsclient] <semantic> Log file: /home/jfl/projects/jest-custom/.log/tsserver-log-jFbiZM/tsserver.log"
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsclient] Starting tsserver",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsclient] Starting tsserver",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsclient] Starting tsserver"
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1059	"server_request"	"window/workDoneProgress/create"	{  token = "1f8cab6e-6114-4ecc-aafe-8238990ea313"}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1062	"server_request: found handler for"	"window/workDoneProgress/create"
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/workDoneProgress/create"	{  ctx = '{\n  client_id = 1,\n  method = "window/workDoneProgress/create"\n}',  result = {    token = "1f8cab6e-6114-4ecc-aafe-8238990ea313"  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:403	"server_request: callback result"	{  result = vim.NIL,  status = true}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 0,  jsonrpc = "2.0",  result = vim.NIL}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:23.87] <syntax> Sending request: configure (0). Response expected: yes. Current queue length: 0",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.87] <syntax> Sending request: configure (0). Response expected: yes. Current queue length: 0",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:23.87] <syntax> Sending request: configure (0). Response expected: yes. Current queue length: 0"
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Arguments: {\n    "hostInfo": "neovim",\n    "formatOptions": {\n        "newLineCharacter": "\\n"\n    },\n    "preferences": {\n        "allowIncompleteCompletions": true,\n        "allowRenameOfImportPath": true,\n        "allowTextChangesInNewFiles": true,\n        "disableLineTextInReferences": true,\n        "disableSuggestions": false,\n        "displayPartsForJSDoc": true,\n        "generateReturnInDocTemplate": true,\n        "importModuleSpecifierEnding": "auto",\n        "importModuleSpecifierPreference": "shortest",\n        "includeAutomaticOptionalChainCompletions": true,\n        "includeCompletionsForImportStatements": true,\n        "includeCompletionsForModuleExports": true,\n        "includeCompletionsWithClassMemberSnippets": true,\n        "includeCompletionsWithInsertText": true,\n        "includeCompletionsWithObjectLiteralMethodSnippets": true,\n        "includeCompletionsWithSnippetText": true,\n        "includeInlayEnumMemberValueHints": false,\n        "includeInlayFunctionLikeReturnTypeHints": false,\n        "includeInlayFunctionParameterTypeHints": false,\n        "includeInlayParameterNameHints": "none",\n        "includeInlayParameterNameHintsWhenArgumentMatchesName": false,\n        "includeInlayPropertyDeclarationTypeHints": false,\n        "includeInlayVariableTypeHints": false,\n        "includeInlayVariableTypeHintsWhenTypeMatchesName": false,\n        "includePackageJsonAutoImports": "auto",\n        "jsxAttributeCompletionStyle": "auto",\n        "lazyConfiguredProjectsFromExternalProject": false,\n        "providePrefixAndSuffixTextForRename": true,\n        "provideRefactorNotApplicableReason": true,\n        "quotePreference": "auto",\n        "useLabelDetailsInCompletionEntries": true\n    }\n}',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Arguments: {\n    "hostInfo": "neovim",\n    "formatOptions": {\n        "newLineCharacter": "\\n"\n    },\n    "preferences": {\n        "allowIncompleteCompletions": true,\n        "allowRenameOfImportPath": true,\n        "allowTextChangesInNewFiles": true,\n        "disableLineTextInReferences": true,\n        "disableSuggestions": false,\n        "displayPartsForJSDoc": true,\n        "generateReturnInDocTemplate": true,\n        "importModuleSpecifierEnding": "auto",\n        "importModuleSpecifierPreference": "shortest",\n        "includeAutomaticOptionalChainCompletions": true,\n        "includeCompletionsForImportStatements": true,\n        "includeCompletionsForModuleExports": true,\n        "includeCompletionsWithClassMemberSnippets": true,\n        "includeCompletionsWithInsertText": true,\n        "includeCompletionsWithObjectLiteralMethodSnippets": true,\n        "includeCompletionsWithSnippetText": true,\n        "includeInlayEnumMemberValueHints": false,\n        "includeInlayFunctionLikeReturnTypeHints": false,\n        "includeInlayFunctionParameterTypeHints": false,\n        "includeInlayParameterNameHints": "none",\n        "includeInlayParameterNameHintsWhenArgumentMatchesName": false,\n        "includeInlayPropertyDeclarationTypeHints": false,\n        "includeInlayVariableTypeHints": false,\n        "includeInlayVariableTypeHintsWhenTypeMatchesName": false,\n        "includePackageJsonAutoImports": "auto",\n        "jsxAttributeCompletionStyle": "auto",\n        "lazyConfiguredProjectsFromExternalProject": false,\n        "providePrefixAndSuffixTextForRename": true,\n        "provideRefactorNotApplicableReason": true,\n        "quotePreference": "auto",\n        "useLabelDetailsInCompletionEntries": true\n    }\n}',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Arguments: {\n    "hostInfo": "neovim",\n    "formatOptions": {\n        "newLineCharacter": "\\n"\n    },\n    "preferences": {\n        "allowIncompleteCompletions": true,\n        "allowRenameOfImportPath": true,\n        "allowTextChangesInNewFiles": true,\n        "disableLineTextInReferences": true,\n        "disableSuggestions": false,\n        "displayPartsForJSDoc": true,\n        "generateReturnInDocTemplate": true,\n        "importModuleSpecifierEnding": "auto",\n        "importModuleSpecifierPreference": "shortest",\n        "includeAutomaticOptionalChainCompletions": true,\n        "includeCompletionsForImportStatements": true,\n        "includeCompletionsForModuleExports": true,\n        "includeCompletionsWithClassMemberSnippets": true,\n        "includeCompletionsWithInsertText": true,\n        "includeCompletionsWithObjectLiteralMethodSnippets": true,\n        "includeCompletionsWithSnippetText": true,\n        "includeInlayEnumMemberValueHints": false,\n        "includeInlayFunctionLikeReturnTypeHints": false,\n        "includeInlayFunctionParameterTypeHints": false,\n        "includeInlayParameterNameHints": "none",\n        "includeInlayParameterNameHintsWhenArgumentMatchesName": false,\n        "includeInlayPropertyDeclarationTypeHints": false,\n        "includeInlayVariableTypeHints": false,\n        "includeInlayVariableTypeHintsWhenTypeMatchesName": false,\n        "includePackageJsonAutoImports": "auto",\n        "jsxAttributeCompletionStyle": "auto",\n        "lazyConfiguredProjectsFromExternalProject": false,\n        "providePrefixAndSuffixTextForRename": true,\n        "provideRefactorNotApplicableReason": true,\n        "quotePreference": "auto",\n        "useLabelDetailsInCompletionEntries": true\n    }\n}'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:23.88] <semantic> Sending request: configure (0). Response expected: yes. Current queue length: 0",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.88] <semantic> Sending request: configure (0). Response expected: yes. Current queue length: 0",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:23.88] <semantic> Sending request: configure (0). Response expected: yes. Current queue length: 0"
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Arguments: {\n    "hostInfo": "neovim",\n    "formatOptions": {\n        "newLineCharacter": "\\n"\n    },\n    "preferences": {\n        "allowIncompleteCompletions": true,\n        "allowRenameOfImportPath": true,\n        "allowTextChangesInNewFiles": true,\n        "disableLineTextInReferences": true,\n        "disableSuggestions": false,\n        "displayPartsForJSDoc": true,\n        "generateReturnInDocTemplate": true,\n        "importModuleSpecifierEnding": "auto",\n        "importModuleSpecifierPreference": "shortest",\n        "includeAutomaticOptionalChainCompletions": true,\n        "includeCompletionsForImportStatements": true,\n        "includeCompletionsForModuleExports": true,\n        "includeCompletionsWithClassMemberSnippets": true,\n        "includeCompletionsWithInsertText": true,\n        "includeCompletionsWithObjectLiteralMethodSnippets": true,\n        "includeCompletionsWithSnippetText": true,\n        "includeInlayEnumMemberValueHints": false,\n        "includeInlayFunctionLikeReturnTypeHints": false,\n        "includeInlayFunctionParameterTypeHints": false,\n        "includeInlayParameterNameHints": "none",\n        "includeInlayParameterNameHintsWhenArgumentMatchesName": false,\n        "includeInlayPropertyDeclarationTypeHints": false,\n        "includeInlayVariableTypeHints": false,\n        "includeInlayVariableTypeHintsWhenTypeMatchesName": false,\n        "includePackageJsonAutoImports": "auto",\n        "jsxAttributeCompletionStyle": "auto",\n        "lazyConfiguredProjectsFromExternalProject": false,\n        "providePrefixAndSuffixTextForRename": true,\n        "provideRefactorNotApplicableReason": true,\n        "quotePreference": "auto",\n        "useLabelDetailsInCompletionEntries": true\n    }\n}',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Arguments: {\n    "hostInfo": "neovim",\n    "formatOptions": {\n        "newLineCharacter": "\\n"\n    },\n    "preferences": {\n        "allowIncompleteCompletions": true,\n        "allowRenameOfImportPath": true,\n        "allowTextChangesInNewFiles": true,\n        "disableLineTextInReferences": true,\n        "disableSuggestions": false,\n        "displayPartsForJSDoc": true,\n        "generateReturnInDocTemplate": true,\n        "importModuleSpecifierEnding": "auto",\n        "importModuleSpecifierPreference": "shortest",\n        "includeAutomaticOptionalChainCompletions": true,\n        "includeCompletionsForImportStatements": true,\n        "includeCompletionsForModuleExports": true,\n        "includeCompletionsWithClassMemberSnippets": true,\n        "includeCompletionsWithInsertText": true,\n        "includeCompletionsWithObjectLiteralMethodSnippets": true,\n        "includeCompletionsWithSnippetText": true,\n        "includeInlayEnumMemberValueHints": false,\n        "includeInlayFunctionLikeReturnTypeHints": false,\n        "includeInlayFunctionParameterTypeHints": false,\n        "includeInlayParameterNameHints": "none",\n        "includeInlayParameterNameHintsWhenArgumentMatchesName": false,\n        "includeInlayPropertyDeclarationTypeHints": false,\n        "includeInlayVariableTypeHints": false,\n        "includeInlayVariableTypeHintsWhenTypeMatchesName": false,\n        "includePackageJsonAutoImports": "auto",\n        "jsxAttributeCompletionStyle": "auto",\n        "lazyConfiguredProjectsFromExternalProject": false,\n        "providePrefixAndSuffixTextForRename": true,\n        "provideRefactorNotApplicableReason": true,\n        "quotePreference": "auto",\n        "useLabelDetailsInCompletionEntries": true\n    }\n}',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Arguments: {\n    "hostInfo": "neovim",\n    "formatOptions": {\n        "newLineCharacter": "\\n"\n    },\n    "preferences": {\n        "allowIncompleteCompletions": true,\n        "allowRenameOfImportPath": true,\n        "allowTextChangesInNewFiles": true,\n        "disableLineTextInReferences": true,\n        "disableSuggestions": false,\n        "displayPartsForJSDoc": true,\n        "generateReturnInDocTemplate": true,\n        "importModuleSpecifierEnding": "auto",\n        "importModuleSpecifierPreference": "shortest",\n        "includeAutomaticOptionalChainCompletions": true,\n        "includeCompletionsForImportStatements": true,\n        "includeCompletionsForModuleExports": true,\n        "includeCompletionsWithClassMemberSnippets": true,\n        "includeCompletionsWithInsertText": true,\n        "includeCompletionsWithObjectLiteralMethodSnippets": true,\n        "includeCompletionsWithSnippetText": true,\n        "includeInlayEnumMemberValueHints": false,\n        "includeInlayFunctionLikeReturnTypeHints": false,\n        "includeInlayFunctionParameterTypeHints": false,\n        "includeInlayParameterNameHints": "none",\n        "includeInlayParameterNameHintsWhenArgumentMatchesName": false,\n        "includeInlayPropertyDeclarationTypeHints": false,\n        "includeInlayVariableTypeHints": false,\n        "includeInlayVariableTypeHintsWhenTypeMatchesName": false,\n        "includePackageJsonAutoImports": "auto",\n        "jsxAttributeCompletionStyle": "auto",\n        "lazyConfiguredProjectsFromExternalProject": false,\n        "providePrefixAndSuffixTextForRename": true,\n        "provideRefactorNotApplicableReason": true,\n        "quotePreference": "auto",\n        "useLabelDetailsInCompletionEntries": true\n    }\n}'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[lspserver] onInitialize result {\n  \"capabilities\": {\n    \"textDocumentSync\": 2,\n    \"completionProvider\": {\n      \"triggerCharacters\": [\n        \".\",\n        \"\\\"\",\n        \"'\",\n        \"/\",\n        \"@\",\n        \"<\"\n      ],\n      \"resolveProvider\": true\n    },\n    \"codeActionProvider\": {\n      \"codeActionKinds\": [\n        \"source.fixAll.ts\",\n        \"source.removeUnused.ts\",\n        \"source.addMissingImports.ts\",\n        \"source.organizeImports.ts\",\n        \"source.removeUnusedImports.ts\",\n        \"source.sortImports.ts\",\n        \"quickfix\",\n        \"refactor\"\n      ]\n    },\n    \"definitionProvider\": true,\n    \"documentFormattingProvider\": true,\n    \"documentRangeFormattingProvider\": true,\n    \"documentHighlightProvider\": true,\n    \"documentSymbolProvider\": true,\n    \"executeCommandProvider\": {\n      \"commands\": [\n        \"_typescript.applyWorkspaceEdit\",\n        \"_typescript.applyCodeAction\",\n        \"_typescript.applyRefactoring\",\n        \"_typescript.configurePlugin\",\n        \"_typescript.organizeImports\",\n        \"_typescript.applyRenameFile\",\n        \"_typescript.goToSourceDefinition\"\n      ]\n    },\n    \"hoverProvider\": true,\n    \"inlayHintProvider\": true,\n    \"renameProvider\": {\n      \"prepareProvider\": true\n    },\n    \"referencesProvider\": true,\n    \"selectionRangeProvider\": true,\n    \"signatureHelpProvider\": {\n      \"triggerCharacters\": [\n        \"(\",\n        \",\",\n        \"<\"\n      ],\n      \"retriggerCharacters\": [\n        \")\"\n      ]\n    },\n    \"workspaceSymbolProvider\": true,\n    \"implementationProvider\": true,\n    \"typeDefinitionProvider\": true,\n    \"foldingRangeProvider\": true,\n    \"semanticTokensProvider\": {\n      \"documentSelector\": null,\n      \"legend\": {\n        \"tokenTypes\": [\n          \"class\",\n          \"enum\",\n          \"interface\",\n          \"namespace\",\n          \"typeParameter\",\n          \"type\",\n          \"parameter\",\n          \"variable\",\n          \"enumMember\",\n          \"property\",\n          \"function\",\n          \"member\"\n        ],\n        \"tokenModifiers\": [\n          \"declaration\",\n          \"static\",\n          \"async\",\n          \"readonly\",\n          \"defaultLibrary\",\n          \"local\"\n        ]\n      },\n      \"full\": true,\n      \"range\": true\n    },\n    \"workspace\": {\n      \"fileOperations\": {\n        \"willRename\": {\n          \"filters\": [\n            {\n              \"scheme\": \"file\",\n              \"pattern\": {\n                \"glob\": \"**/*.{ts,js,jsx,tsx,mjs,mts,cjs,cts}\",\n                \"matches\": \"file\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[lspserver] onInitialize result {\n  \"capabilities\": {\n    \"textDocumentSync\": 2,\n    \"completionProvider\": {\n      \"triggerCharacters\": [\n        \".\",\n        \"\\\"\",\n        \"'\",\n        \"/\",\n        \"@\",\n        \"<\"\n      ],\n      \"resolveProvider\": true\n    },\n    \"codeActionProvider\": {\n      \"codeActionKinds\": [\n        \"source.fixAll.ts\",\n        \"source.removeUnused.ts\",\n        \"source.addMissingImports.ts\",\n        \"source.organizeImports.ts\",\n        \"source.removeUnusedImports.ts\",\n        \"source.sortImports.ts\",\n        \"quickfix\",\n        \"refactor\"\n      ]\n    },\n    \"definitionProvider\": true,\n    \"documentFormattingProvider\": true,\n    \"documentRangeFormattingProvider\": true,\n    \"documentHighlightProvider\": true,\n    \"documentSymbolProvider\": true,\n    \"executeCommandProvider\": {\n      \"commands\": [\n        \"_typescript.applyWorkspaceEdit\",\n        \"_typescript.applyCodeAction\",\n        \"_typescript.applyRefactoring\",\n        \"_typescript.configurePlugin\",\n        \"_typescript.organizeImports\",\n        \"_typescript.applyRenameFile\",\n        \"_typescript.goToSourceDefinition\"\n      ]\n    },\n    \"hoverProvider\": true,\n    \"inlayHintProvider\": true,\n    \"renameProvider\": {\n      \"prepareProvider\": true\n    },\n    \"referencesProvider\": true,\n    \"selectionRangeProvider\": true,\n    \"signatureHelpProvider\": {\n      \"triggerCharacters\": [\n        \"(\",\n        \",\",\n        \"<\"\n      ],\n      \"retriggerCharacters\": [\n        \")\"\n      ]\n    },\n    \"workspaceSymbolProvider\": true,\n    \"implementationProvider\": true,\n    \"typeDefinitionProvider\": true,\n    \"foldingRangeProvider\": true,\n    \"semanticTokensProvider\": {\n      \"documentSelector\": null,\n      \"legend\": {\n        \"tokenTypes\": [\n          \"class\",\n          \"enum\",\n          \"interface\",\n          \"namespace\",\n          \"typeParameter\",\n          \"type\",\n          \"parameter\",\n          \"variable\",\n          \"enumMember\",\n          \"property\",\n          \"function\",\n          \"member\"\n        ],\n        \"tokenModifiers\": [\n          \"declaration\",\n          \"static\",\n          \"async\",\n          \"readonly\",\n          \"defaultLibrary\",\n          \"local\"\n        ]\n      },\n      \"full\": true,\n      \"range\": true\n    },\n    \"workspace\": {\n      \"fileOperations\": {\n        \"willRename\": {\n          \"filters\": [\n            {\n              \"scheme\": \"file\",\n              \"pattern\": {\n                \"glob\": \"**/*.{ts,js,jsx,tsx,mjs,mts,cjs,cts}\",\n                \"matches\": \"file\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[lspserver] onInitialize result {\n  \"capabilities\": {\n    \"textDocumentSync\": 2,\n    \"completionProvider\": {\n      \"triggerCharacters\": [\n        \".\",\n        \"\\\"\",\n        \"'\",\n        \"/\",\n        \"@\",\n        \"<\"\n      ],\n      \"resolveProvider\": true\n    },\n    \"codeActionProvider\": {\n      \"codeActionKinds\": [\n        \"source.fixAll.ts\",\n        \"source.removeUnused.ts\",\n        \"source.addMissingImports.ts\",\n        \"source.organizeImports.ts\",\n        \"source.removeUnusedImports.ts\",\n        \"source.sortImports.ts\",\n        \"quickfix\",\n        \"refactor\"\n      ]\n    },\n    \"definitionProvider\": true,\n    \"documentFormattingProvider\": true,\n    \"documentRangeFormattingProvider\": true,\n    \"documentHighlightProvider\": true,\n    \"documentSymbolProvider\": true,\n    \"executeCommandProvider\": {\n      \"commands\": [\n        \"_typescript.applyWorkspaceEdit\",\n        \"_typescript.applyCodeAction\",\n        \"_typescript.applyRefactoring\",\n        \"_typescript.configurePlugin\",\n        \"_typescript.organizeImports\",\n        \"_typescript.applyRenameFile\",\n        \"_typescript.goToSourceDefinition\"\n      ]\n    },\n    \"hoverProvider\": true,\n    \"inlayHintProvider\": true,\n    \"renameProvider\": {\n      \"prepareProvider\": true\n    },\n    \"referencesProvider\": true,\n    \"selectionRangeProvider\": true,\n    \"signatureHelpProvider\": {\n      \"triggerCharacters\": [\n        \"(\",\n        \",\",\n        \"<\"\n      ],\n      \"retriggerCharacters\": [\n        \")\"\n      ]\n    },\n    \"workspaceSymbolProvider\": true,\n    \"implementationProvider\": true,\n    \"typeDefinitionProvider\": true,\n    \"foldingRangeProvider\": true,\n    \"semanticTokensProvider\": {\n      \"documentSelector\": null,\n      \"legend\": {\n        \"tokenTypes\": [\n          \"class\",\n          \"enum\",\n          \"interface\",\n          \"namespace\",\n          \"typeParameter\",\n          \"type\",\n          \"parameter\",\n          \"variable\",\n          \"enumMember\",\n          \"property\",\n          \"function\",\n          \"member\"\n        ],\n        \"tokenModifiers\": [\n          \"declaration\",\n          \"static\",\n          \"async\",\n          \"readonly\",\n          \"defaultLibrary\",\n          \"local\"\n        ]\n      },\n      \"full\": true,\n      \"range\": true\n    },\n    \"workspace\": {\n      \"fileOperations\": {\n        \"willRename\": {\n          \"filters\": [\n            {\n              \"scheme\": \"file\",\n              \"pattern\": {\n                \"glob\": \"**/*.{ts,js,jsx,tsx,mjs,mts,cjs,cts}\",\n                \"matches\": \"file\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}"
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "1f8cab6e-6114-4ecc-aafe-8238990ea313",    value = {      kind = "begin",      title = "Initializing JS/TS language features…"    }  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "initialized",  params = vim.empty_dict()}
[INFO][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1336	"LSP[tsserver]"	"server_capabilities"	{  server_capabilities = {    codeActionProvider = {      codeActionKinds = { "source.fixAll.ts", "source.removeUnused.ts", "source.addMissingImports.ts", "source.organizeImports.ts", "source.removeUnusedImports.ts", "source.sortImports.ts", "quickfix", "refactor" }    },    completionProvider = {      resolveProvider = true,      triggerCharacters = { ".", '"', "'", "/", "@", "<" }    },    definitionProvider = true,    documentFormattingProvider = true,    documentHighlightProvider = true,    documentRangeFormattingProvider = true,    documentSymbolProvider = true,    executeCommandProvider = {      commands = { "_typescript.applyWorkspaceEdit", "_typescript.applyCodeAction", "_typescript.applyRefactoring", "_typescript.configurePlugin", "_typescript.organizeImports", "_typescript.applyRenameFile", "_typescript.goToSourceDefinition" }    },    foldingRangeProvider = true,    hoverProvider = true,    implementationProvider = true,    inlayHintProvider = true,    referencesProvider = true,    renameProvider = {      prepareProvider = true    },    selectionRangeProvider = true,    semanticTokensProvider = {      full = true,      legend = {        tokenModifiers = { "declaration", "static", "async", "readonly", "defaultLibrary", "local" },        tokenTypes = { "class", "enum", "interface", "namespace", "typeParameter", "type", "parameter", "variable", "enumMember", "property", "function", "member" }      },      range = true    },    signatureHelpProvider = {      retriggerCharacters = { ")" },      triggerCharacters = { "(", ",", "<" }    },    textDocumentSync = {      change = 2,      openClose = true,      save = {        includeText = false      },      willSave = false,      willSaveWaitUntil = false    },    typeDefinitionProvider = true,    workspace = {      fileOperations = {        willRename = {          filters = { {              pattern = {                glob = "**/*.{ts,js,jsx,tsx,mjs,mts,cjs,cts}",                matches = "file"              },              scheme = "file"            } }        }      }    },    workspaceSymbolProvider = true  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "textDocument/didOpen",  params = {    textDocument = {      languageId = "typescript",      text = 'import { myFunc } from "../src";\n\nexpect.extend({\n  toMatchExpectedTwoItemsArray(\n    received: any,\n    firstItem: any,\n    secondItem: any\n  ): jest.CustomMatcherResult {\n    if (!Array.isArray(received)) {\n      return {\n        pass: false,\n        message: () => `Expected array, received ${received}`,\n      };\n    }\n\n    const receivedArray: Array<number> = received as Array<number>;\n\n    const pass =\n      receivedArray.length === 2 &&\n      receivedArray[0] === firstItem &&\n      receivedArray[1] === secondItem;\n\n    return {\n      pass,\n      message: () =>\n        // prettier-ignore\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\nReceived: ${this.utils.printReceived(received)}\\n\\n${this.utils.diff([firstItem, secondItem], received)}`,\n    };\n  },\n});\n\ndescribe("index tests", () => {\n  it("should return an array of 2 items", () => {\n    expect(myFunc()).toHaveLength(2);\n\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\n  });\n});\n',      uri = "file:///home/jfl/projects/jest-custom/tests/index.test.ts",      version = 0    }  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/typescriptVersion",  params = {    source = "workspace",    version = "4.9.5"  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[lspserver] onDidOpenTextDocument {\n  "textDocument": {\n    "uri": "file:///home/jfl/projects/jest-custom/tests/index.test.ts",\n    "version": 0,\n    "text": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "languageId": "typescript"\n  }\n} /home/jfl/projects/jest-custom/tests/index.test.ts',    type = 4  }}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"$/progress"	{  token = "1f8cab6e-6114-4ecc-aafe-8238990ea313",  value = {    kind = "begin",    title = "Initializing JS/TS language features…"  }}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"$/progress"	{  ctx = '{\n  client_id = 1,\n  method = "$/progress"\n}',  result = {    token = "1f8cab6e-6114-4ecc-aafe-8238990ea313",    value = {      kind = "begin",      title = "Initializing JS/TS language features…"    }  }}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"$/typescriptVersion"	{  source = "workspace",  version = "4.9.5"}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[lspserver] onDidOpenTextDocument {\n  "textDocument": {\n    "uri": "file:///home/jfl/projects/jest-custom/tests/index.test.ts",\n    "version": 0,\n    "text": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "languageId": "typescript"\n  }\n} /home/jfl/projects/jest-custom/tests/index.test.ts',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[lspserver] onDidOpenTextDocument {\n  "textDocument": {\n    "uri": "file:///home/jfl/projects/jest-custom/tests/index.test.ts",\n    "version": 0,\n    "text": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "languageId": "typescript"\n  }\n} /home/jfl/projects/jest-custom/tests/index.test.ts',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[lspserver] onDidOpenTextDocument {\n  "textDocument": {\n    "uri": "file:///home/jfl/projects/jest-custom/tests/index.test.ts",\n    "version": 0,\n    "text": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "languageId": "typescript"\n  }\n} /home/jfl/projects/jest-custom/tests/index.test.ts'
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	nil	{  ctx = "{\n  client_id = 2\n}",  result = {    token = 1,    value = {      kind = "end",      percentage = 100    }  }}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	nil	{  ctx = "{\n  client_id = 2\n}",  result = {    token = 2,    value = {      kind = "end",      percentage = 100    }  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.444] <syntax> Response received: configure (0). Request took 357 ms. Success: true ",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.444] <syntax> Sending request: open (1). Response expected: no. Current queue length: 0",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Arguments: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "fileContent": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "scriptKindName": "TS",\n    "projectRootPath": "/home/jfl/projects/jest-custom"\n}',    type = 4  }}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:23.444] <syntax> Response received: configure (0). Request took 357 ms. Success: true ",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.444] <syntax> Response received: configure (0). Request took 357 ms. Success: true ",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:23.444] <syntax> Response received: configure (0). Request took 357 ms. Success: true "
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:23.444] <syntax> Sending request: open (1). Response expected: no. Current queue length: 0",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.444] <syntax> Sending request: open (1). Response expected: no. Current queue length: 0",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:23.444] <syntax> Sending request: open (1). Response expected: no. Current queue length: 0"
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Arguments: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "fileContent": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "scriptKindName": "TS",\n    "projectRootPath": "/home/jfl/projects/jest-custom"\n}',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Arguments: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "fileContent": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "scriptKindName": "TS",\n    "projectRootPath": "/home/jfl/projects/jest-custom"\n}',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Arguments: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "fileContent": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "scriptKindName": "TS",\n    "projectRootPath": "/home/jfl/projects/jest-custom"\n}'
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Response received: configure (0). Request took 358 ms. Success: true ",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: compilerOptionsForInferredProjects (1). Response expected: no. Current queue length: 2",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Arguments: {\n    "options": {\n        "module": "ESNext",\n        "moduleResolution": "Node",\n        "target": "ES2020",\n        "jsx": "React",\n        "strictNullChecks": true,\n        "strictFunctionTypes": true,\n        "sourceMap": true,\n        "allowJs": true,\n        "allowNonTsExtensions": true,\n        "allowSyntheticDefaultImports": true,\n        "resolveJsonModule": true\n    }\n}',    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: open (2). Response expected: no. Current queue length: 1",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Arguments: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "fileContent": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "scriptKindName": "TS",\n    "projectRootPath": "/home/jfl/projects/jest-custom"\n}',    type = 4  }}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Response received: configure (0). Request took 358 ms. Success: true ",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Response received: configure (0). Request took 358 ms. Success: true ",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Response received: configure (0). Request took 358 ms. Success: true "
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: geterr (3). Response expected: yes. Current queue length: 0",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Arguments: {\n    "delay": 0,\n    "files": [\n        "/home/jfl/projects/jest-custom/tests/index.test.ts"\n    ]\n}',    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Event received: typingsInstallerPid (0).",    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Data: {\n    "pid": 838038\n}',    type = 4  }}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: compilerOptionsForInferredProjects (1). Response expected: no. Current queue length: 2",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: compilerOptionsForInferredProjects (1). Response expected: no. Current queue length: 2",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: compilerOptionsForInferredProjects (1). Response expected: no. Current queue length: 2"
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Arguments: {\n    "options": {\n        "module": "ESNext",\n        "moduleResolution": "Node",\n        "target": "ES2020",\n        "jsx": "React",\n        "strictNullChecks": true,\n        "strictFunctionTypes": true,\n        "sourceMap": true,\n        "allowJs": true,\n        "allowNonTsExtensions": true,\n        "allowSyntheticDefaultImports": true,\n        "resolveJsonModule": true\n    }\n}',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Arguments: {\n    "options": {\n        "module": "ESNext",\n        "moduleResolution": "Node",\n        "target": "ES2020",\n        "jsx": "React",\n        "strictNullChecks": true,\n        "strictFunctionTypes": true,\n        "sourceMap": true,\n        "allowJs": true,\n        "allowNonTsExtensions": true,\n        "allowSyntheticDefaultImports": true,\n        "resolveJsonModule": true\n    }\n}',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Arguments: {\n    "options": {\n        "module": "ESNext",\n        "moduleResolution": "Node",\n        "target": "ES2020",\n        "jsx": "React",\n        "strictNullChecks": true,\n        "strictFunctionTypes": true,\n        "sourceMap": true,\n        "allowJs": true,\n        "allowNonTsExtensions": true,\n        "allowSyntheticDefaultImports": true,\n        "resolveJsonModule": true\n    }\n}'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: open (2). Response expected: no. Current queue length: 1",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: open (2). Response expected: no. Current queue length: 1",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: open (2). Response expected: no. Current queue length: 1"
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Arguments: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "fileContent": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "scriptKindName": "TS",\n    "projectRootPath": "/home/jfl/projects/jest-custom"\n}',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Arguments: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "fileContent": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "scriptKindName": "TS",\n    "projectRootPath": "/home/jfl/projects/jest-custom"\n}',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Arguments: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "fileContent": "import { myFunc } from \\"../src\\";\\n\\nexpect.extend({\\n  toMatchExpectedTwoItemsArray(\\n    received: any,\\n    firstItem: any,\\n    secondItem: any\\n  ): jest.CustomMatcherResult {\\n    if (!Array.isArray(received)) {\\n      return {\\n        pass: false,\\n        message: () => `Expected array, received ${received}`,\\n      };\\n    }\\n\\n    const receivedArray: Array<number> = received as Array<number>;\\n\\n    const pass =\\n      receivedArray.length === 2 &&\\n      receivedArray[0] === firstItem &&\\n      receivedArray[1] === secondItem;\\n\\n    return {\\n      pass,\\n      message: () =>\\n        // prettier-ignore\\n        `Expected: ${this.utils.printExpected([firstItem, secondItem])}\\\\nReceived: ${this.utils.printReceived(received)}\\\\n\\\\n${this.utils.diff([firstItem, secondItem], received)}`,\\n    };\\n  },\\n});\\n\\ndescribe(\\"index tests\\", () => {\\n  it(\\"should return an array of 2 items\\", () => {\\n    expect(myFunc()).toHaveLength(2);\\n\\n    expect(myFunc()).toMatchExpectedTwoItemsArray(1, 2);\\n  });\\n});\\n",\n    "scriptKindName": "TS",\n    "projectRootPath": "/home/jfl/projects/jest-custom"\n}'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: geterr (3). Response expected: yes. Current queue length: 0",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: geterr (3). Response expected: yes. Current queue length: 0",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Sending request: geterr (3). Response expected: yes. Current queue length: 0"
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Arguments: {\n    "delay": 0,\n    "files": [\n        "/home/jfl/projects/jest-custom/tests/index.test.ts"\n    ]\n}',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Arguments: {\n    "delay": 0,\n    "files": [\n        "/home/jfl/projects/jest-custom/tests/index.test.ts"\n    ]\n}',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Arguments: {\n    "delay": 0,\n    "files": [\n        "/home/jfl/projects/jest-custom/tests/index.test.ts"\n    ]\n}'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Event received: typingsInstallerPid (0).",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Event received: typingsInstallerPid (0).",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:23.446] <semantic> Event received: typingsInstallerPid (0)."
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Data: {\n    "pid": 838038\n}',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Data: {\n    "pid": 838038\n}',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Data: {\n    "pid": 838038\n}'
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.453] <semantic> Event received: projectLoadingStart (0).",    type = 4  }}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:23.453] <semantic> Event received: projectLoadingStart (0).",  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:23.453] <semantic> Event received: projectLoadingStart (0).",    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:23.453] <semantic> Event received: projectLoadingStart (0)."
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Data: {\n    "projectName": "/home/jfl/projects/jest-custom/tsconfig.json",\n    "reason": "Creating possible configured project for /home/jfl/projects/jest-custom/tests/index.test.ts to open"\n}',    type = 4  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 1,  jsonrpc = "2.0",  method = "window/workDoneProgress/create",  params = {    token = "daeb57c9-c881-4597-abba-dfc6defd546f"  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "1f8cab6e-6114-4ecc-aafe-8238990ea313",    value = {      kind = "end"    }  }}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Data: {\n    "projectName": "/home/jfl/projects/jest-custom/tsconfig.json",\n    "reason": "Creating possible configured project for /home/jfl/projects/jest-custom/tests/index.test.ts to open"\n}',  type = 4}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Data: {\n    "projectName": "/home/jfl/projects/jest-custom/tsconfig.json",\n    "reason": "Creating possible configured project for /home/jfl/projects/jest-custom/tests/index.test.ts to open"\n}',    type = 4  }}
[INFO][2023-03-13 15:52:23] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Data: {\n    "projectName": "/home/jfl/projects/jest-custom/tsconfig.json",\n    "reason": "Creating possible configured project for /home/jfl/projects/jest-custom/tests/index.test.ts to open"\n}'
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1059	"server_request"	"window/workDoneProgress/create"	{  token = "daeb57c9-c881-4597-abba-dfc6defd546f"}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1062	"server_request: found handler for"	"window/workDoneProgress/create"
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"window/workDoneProgress/create"	{  ctx = '{\n  client_id = 1,\n  method = "window/workDoneProgress/create"\n}',  result = {    token = "daeb57c9-c881-4597-abba-dfc6defd546f"  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:403	"server_request: callback result"	{  result = vim.NIL,  status = true}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 1,  jsonrpc = "2.0",  result = vim.NIL}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"$/progress"	{  token = "1f8cab6e-6114-4ecc-aafe-8238990ea313",  value = {    kind = "end"  }}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"$/progress"	{  ctx = '{\n  client_id = 1,\n  method = "$/progress"\n}',  result = {    token = "1f8cab6e-6114-4ecc-aafe-8238990ea313",    value = {      kind = "end"    }  }}
[DEBUG][2023-03-13 15:52:23] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "daeb57c9-c881-4597-abba-dfc6defd546f",    value = {      kind = "begin",      title = "Initializing JS/TS language features…"    }  }}
[TRACE][2023-03-13 15:52:23] .../lua/vim/lsp.lua:1045	"notification"	"$/progress"	{  token = "daeb57c9-c881-4597-abba-dfc6defd546f",  value = {    kind = "begin",    title = "Initializing JS/TS language features…"  }}
[TRACE][2023-03-13 15:52:23] ...lsp/handlers.lua:519	"default_handler"	"$/progress"	{  ctx = '{\n  client_id = 1,\n  method = "$/progress"\n}',  result = {    token = "daeb57c9-c881-4597-abba-dfc6defd546f",    value = {      kind = "begin",      title = "Initializing JS/TS language features…"    }  }}
[DEBUG][2023-03-13 15:52:25] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:25.368] <semantic> Event received: projectLoadingFinish (0).",    type = 4  }}
[TRACE][2023-03-13 15:52:25] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:25.368] <semantic> Event received: projectLoadingFinish (0).",  type = 4}
[TRACE][2023-03-13 15:52:25] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:25.368] <semantic> Event received: projectLoadingFinish (0).",    type = 4  }}
[INFO][2023-03-13 15:52:25] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:25.368] <semantic> Event received: projectLoadingFinish (0)."
[DEBUG][2023-03-13 15:52:25] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Data: {\n    "projectName": "/home/jfl/projects/jest-custom/tsconfig.json"\n}',    type = 4  }}
[DEBUG][2023-03-13 15:52:25] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "daeb57c9-c881-4597-abba-dfc6defd546f",    value = {      kind = "end"    }  }}
[TRACE][2023-03-13 15:52:25] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Data: {\n    "projectName": "/home/jfl/projects/jest-custom/tsconfig.json"\n}',  type = 4}
[TRACE][2023-03-13 15:52:25] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Data: {\n    "projectName": "/home/jfl/projects/jest-custom/tsconfig.json"\n}',    type = 4  }}
[INFO][2023-03-13 15:52:25] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Data: {\n    "projectName": "/home/jfl/projects/jest-custom/tsconfig.json"\n}'
[TRACE][2023-03-13 15:52:25] .../lua/vim/lsp.lua:1045	"notification"	"$/progress"	{  token = "daeb57c9-c881-4597-abba-dfc6defd546f",  value = {    kind = "end"  }}
[TRACE][2023-03-13 15:52:25] ...lsp/handlers.lua:519	"default_handler"	"$/progress"	{  ctx = '{\n  client_id = 1,\n  method = "$/progress"\n}',  result = {    token = "daeb57c9-c881-4597-abba-dfc6defd546f",    value = {      kind = "end"    }  }}
[DEBUG][2023-03-13 15:52:25] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:25.370] <semantic> Event received: telemetry (0).",    type = 4  }}
[TRACE][2023-03-13 15:52:25] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:25.370] <semantic> Event received: telemetry (0).",  type = 4}
[TRACE][2023-03-13 15:52:25] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:25.370] <semantic> Event received: telemetry (0).",    type = 4  }}
[INFO][2023-03-13 15:52:25] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:25.370] <semantic> Event received: telemetry (0)."
[DEBUG][2023-03-13 15:52:25] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Data: {\n    "telemetryEventName": "projectInfo",\n    "payload": {\n        "projectId": "73564d5b7414393c64ef9495c1825384c2f7bbb9270907d70e6d289bd74d863e",\n        "fileStats": {\n            "js": 0,\n            "jsSize": 0,\n            "jsx": 0,\n            "jsxSize": 0,\n            "ts": 1,\n            "tsSize": 56,\n            "tsx": 0,\n            "tsxSize": 0,\n            "dts": 166,\n            "dtsSize": 4059918,\n            "deferred": 0,\n            "deferredSize": 0\n        },\n        "compilerOptions": {\n            "target": "es6",\n            "module": "commonjs",\n            "rootDir": "",\n            "resolveJsonModule": true,\n            "sourceMap": true,\n            "outDir": "",\n            "esModuleInterop": true,\n            "forceConsistentCasingInFileNames": true,\n            "strict": true,\n            "skipLibCheck": true,\n            "typeRoots": [\n                "",\n                ""\n            ]\n        },\n        "typeAcquisition": {\n            "enable": false,\n            "include": false,\n            "exclude": false\n        },\n        "extends": false,\n        "files": false,\n        "include": true,\n        "exclude": true,\n        "compileOnSave": false,\n        "configFileName": "tsconfig.json",\n        "projectType": "configured",\n        "languageServiceEnabled": true,\n        "version": "4.9.5"\n    }\n}',    type = 4  }}
[TRACE][2023-03-13 15:52:25] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Data: {\n    "telemetryEventName": "projectInfo",\n    "payload": {\n        "projectId": "73564d5b7414393c64ef9495c1825384c2f7bbb9270907d70e6d289bd74d863e",\n        "fileStats": {\n            "js": 0,\n            "jsSize": 0,\n            "jsx": 0,\n            "jsxSize": 0,\n            "ts": 1,\n            "tsSize": 56,\n            "tsx": 0,\n            "tsxSize": 0,\n            "dts": 166,\n            "dtsSize": 4059918,\n            "deferred": 0,\n            "deferredSize": 0\n        },\n        "compilerOptions": {\n            "target": "es6",\n            "module": "commonjs",\n            "rootDir": "",\n            "resolveJsonModule": true,\n            "sourceMap": true,\n            "outDir": "",\n            "esModuleInterop": true,\n            "forceConsistentCasingInFileNames": true,\n            "strict": true,\n            "skipLibCheck": true,\n            "typeRoots": [\n                "",\n                ""\n            ]\n        },\n        "typeAcquisition": {\n            "enable": false,\n            "include": false,\n            "exclude": false\n        },\n        "extends": false,\n        "files": false,\n        "include": true,\n        "exclude": true,\n        "compileOnSave": false,\n        "configFileName": "tsconfig.json",\n        "projectType": "configured",\n        "languageServiceEnabled": true,\n        "version": "4.9.5"\n    }\n}',  type = 4}
[TRACE][2023-03-13 15:52:25] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Data: {\n    "telemetryEventName": "projectInfo",\n    "payload": {\n        "projectId": "73564d5b7414393c64ef9495c1825384c2f7bbb9270907d70e6d289bd74d863e",\n        "fileStats": {\n            "js": 0,\n            "jsSize": 0,\n            "jsx": 0,\n            "jsxSize": 0,\n            "ts": 1,\n            "tsSize": 56,\n            "tsx": 0,\n            "tsxSize": 0,\n            "dts": 166,\n            "dtsSize": 4059918,\n            "deferred": 0,\n            "deferredSize": 0\n        },\n        "compilerOptions": {\n            "target": "es6",\n            "module": "commonjs",\n            "rootDir": "",\n            "resolveJsonModule": true,\n            "sourceMap": true,\n            "outDir": "",\n            "esModuleInterop": true,\n            "forceConsistentCasingInFileNames": true,\n            "strict": true,\n            "skipLibCheck": true,\n            "typeRoots": [\n                "",\n                ""\n            ]\n        },\n        "typeAcquisition": {\n            "enable": false,\n            "include": false,\n            "exclude": false\n        },\n        "extends": false,\n        "files": false,\n        "include": true,\n        "exclude": true,\n        "compileOnSave": false,\n        "configFileName": "tsconfig.json",\n        "projectType": "configured",\n        "languageServiceEnabled": true,\n        "version": "4.9.5"\n    }\n}',    type = 4  }}
[INFO][2023-03-13 15:52:25] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Data: {\n    "telemetryEventName": "projectInfo",\n    "payload": {\n        "projectId": "73564d5b7414393c64ef9495c1825384c2f7bbb9270907d70e6d289bd74d863e",\n        "fileStats": {\n            "js": 0,\n            "jsSize": 0,\n            "jsx": 0,\n            "jsxSize": 0,\n            "ts": 1,\n            "tsSize": 56,\n            "tsx": 0,\n            "tsxSize": 0,\n            "dts": 166,\n            "dtsSize": 4059918,\n            "deferred": 0,\n            "deferredSize": 0\n        },\n        "compilerOptions": {\n            "target": "es6",\n            "module": "commonjs",\n            "rootDir": "",\n            "resolveJsonModule": true,\n            "sourceMap": true,\n            "outDir": "",\n            "esModuleInterop": true,\n            "forceConsistentCasingInFileNames": true,\n            "strict": true,\n            "skipLibCheck": true,\n            "typeRoots": [\n                "",\n                ""\n            ]\n        },\n        "typeAcquisition": {\n            "enable": false,\n            "include": false,\n            "exclude": false\n        },\n        "extends": false,\n        "files": false,\n        "include": true,\n        "exclude": true,\n        "compileOnSave": false,\n        "configFileName": "tsconfig.json",\n        "projectType": "configured",\n        "languageServiceEnabled": true,\n        "version": "4.9.5"\n    }\n}'
[DEBUG][2023-03-13 15:52:25] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:25.371] <semantic> Event received: configFileDiag (0).",    type = 4  }}
[DEBUG][2023-03-13 15:52:25] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Data: {\n    "triggerFile": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "configFile": "/home/jfl/projects/jest-custom/tsconfig.json",\n    "diagnostics": []\n}',    type = 4  }}
[TRACE][2023-03-13 15:52:25] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:25.371] <semantic> Event received: configFileDiag (0).",  type = 4}
[TRACE][2023-03-13 15:52:25] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:25.371] <semantic> Event received: configFileDiag (0).",    type = 4  }}
[INFO][2023-03-13 15:52:25] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:25.371] <semantic> Event received: configFileDiag (0)."
[TRACE][2023-03-13 15:52:25] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Data: {\n    "triggerFile": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "configFile": "/home/jfl/projects/jest-custom/tsconfig.json",\n    "diagnostics": []\n}',  type = 4}
[TRACE][2023-03-13 15:52:25] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Data: {\n    "triggerFile": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "configFile": "/home/jfl/projects/jest-custom/tsconfig.json",\n    "diagnostics": []\n}',    type = 4  }}
[INFO][2023-03-13 15:52:25] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Data: {\n    "triggerFile": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "configFile": "/home/jfl/projects/jest-custom/tsconfig.json",\n    "diagnostics": []\n}'
[DEBUG][2023-03-13 15:52:26] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:26.25] <semantic> Event received: syntaxDiag (0).",    type = 4  }}
[DEBUG][2023-03-13 15:52:26] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Data: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "diagnostics": []\n}',    type = 4  }}
[TRACE][2023-03-13 15:52:26] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:26.25] <semantic> Event received: syntaxDiag (0).",  type = 4}
[TRACE][2023-03-13 15:52:26] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:26.25] <semantic> Event received: syntaxDiag (0).",    type = 4  }}
[INFO][2023-03-13 15:52:26] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:26.25] <semantic> Event received: syntaxDiag (0)."
[TRACE][2023-03-13 15:52:26] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Data: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "diagnostics": []\n}',  type = 4}
[TRACE][2023-03-13 15:52:26] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Data: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "diagnostics": []\n}',    type = 4  }}
[INFO][2023-03-13 15:52:26] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Data: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "diagnostics": []\n}'
[DEBUG][2023-03-13 15:52:26] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "textDocument/publishDiagnostics",  params = {    diagnostics = {},    uri = "file:///home/jfl/projects/jest-custom/tests/index.test.ts"  }}
[TRACE][2023-03-13 15:52:26] .../lua/vim/lsp.lua:1045	"notification"	"textDocument/publishDiagnostics"	{  diagnostics = {},  uri = "file:///home/jfl/projects/jest-custom/tests/index.test.ts"}
[TRACE][2023-03-13 15:52:26] ...lsp/handlers.lua:519	"default_handler"	"textDocument/publishDiagnostics"	{  ctx = '{\n  client_id = 1,\n  method = "textDocument/publishDiagnostics"\n}',  result = {    diagnostics = {},    uri = "file:///home/jfl/projects/jest-custom/tests/index.test.ts"  }}
[DEBUG][2023-03-13 15:52:26] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:26.110] <semantic> Event received: semanticDiag (0).",    type = 4  }}
[DEBUG][2023-03-13 15:52:26] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] Data: {\n    \"file\": \"/home/jfl/projects/jest-custom/tests/index.test.ts\",\n    \"diagnostics\": [\n        {\n            \"start\": {\n                \"line\": 36,\n                \"offset\": 22\n            },\n            \"end\": {\n                \"line\": 36,\n                \"offset\": 50\n            },\n            \"text\": \"Property 'toMatchExpectedTwoItemsArray' does not exist on type 'JestMatchers<number[]>'.\",\n            \"code\": 2339,\n            \"category\": \"error\"\n        }\n    ]\n}",    type = 4  }}
[TRACE][2023-03-13 15:52:26] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:26.110] <semantic> Event received: semanticDiag (0).",  type = 4}
[TRACE][2023-03-13 15:52:26] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:26.110] <semantic> Event received: semanticDiag (0).",    type = 4  }}
[INFO][2023-03-13 15:52:26] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:26.110] <semantic> Event received: semanticDiag (0)."
[TRACE][2023-03-13 15:52:26] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] Data: {\n    \"file\": \"/home/jfl/projects/jest-custom/tests/index.test.ts\",\n    \"diagnostics\": [\n        {\n            \"start\": {\n                \"line\": 36,\n                \"offset\": 22\n            },\n            \"end\": {\n                \"line\": 36,\n                \"offset\": 50\n            },\n            \"text\": \"Property 'toMatchExpectedTwoItemsArray' does not exist on type 'JestMatchers<number[]>'.\",\n            \"code\": 2339,\n            \"category\": \"error\"\n        }\n    ]\n}",  type = 4}
[TRACE][2023-03-13 15:52:26] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] Data: {\n    \"file\": \"/home/jfl/projects/jest-custom/tests/index.test.ts\",\n    \"diagnostics\": [\n        {\n            \"start\": {\n                \"line\": 36,\n                \"offset\": 22\n            },\n            \"end\": {\n                \"line\": 36,\n                \"offset\": 50\n            },\n            \"text\": \"Property 'toMatchExpectedTwoItemsArray' does not exist on type 'JestMatchers<number[]>'.\",\n            \"code\": 2339,\n            \"category\": \"error\"\n        }\n    ]\n}",    type = 4  }}
[INFO][2023-03-13 15:52:26] ...lsp/handlers.lua:489	"[tsserver] [tsserver] Data: {\n    \"file\": \"/home/jfl/projects/jest-custom/tests/index.test.ts\",\n    \"diagnostics\": [\n        {\n            \"start\": {\n                \"line\": 36,\n                \"offset\": 22\n            },\n            \"end\": {\n                \"line\": 36,\n                \"offset\": 50\n            },\n            \"text\": \"Property 'toMatchExpectedTwoItemsArray' does not exist on type 'JestMatchers<number[]>'.\",\n            \"code\": 2339,\n            \"category\": \"error\"\n        }\n    ]\n}"
[DEBUG][2023-03-13 15:52:26] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:26.112] <semantic> Event received: suggestionDiag (0).",    type = 4  }}
[DEBUG][2023-03-13 15:52:26] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = '[tsserver] [tsserver] Data: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "diagnostics": []\n}',    type = 4  }}
[DEBUG][2023-03-13 15:52:26] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "[tsserver] [tsserver] [Trace  - 19:52:26.113] <semantic> Async response received: requestCompleted (3). Request took 2688 ms.",    type = 4  }}
[TRACE][2023-03-13 15:52:26] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:26.112] <semantic> Event received: suggestionDiag (0).",  type = 4}
[TRACE][2023-03-13 15:52:26] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:26.112] <semantic> Event received: suggestionDiag (0).",    type = 4  }}
[INFO][2023-03-13 15:52:26] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:26.112] <semantic> Event received: suggestionDiag (0)."
[TRACE][2023-03-13 15:52:26] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = '[tsserver] [tsserver] Data: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "diagnostics": []\n}',  type = 4}
[TRACE][2023-03-13 15:52:26] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = '[tsserver] [tsserver] Data: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "diagnostics": []\n}',    type = 4  }}
[INFO][2023-03-13 15:52:26] ...lsp/handlers.lua:489	'[tsserver] [tsserver] Data: {\n    "file": "/home/jfl/projects/jest-custom/tests/index.test.ts",\n    "diagnostics": []\n}'
[TRACE][2023-03-13 15:52:26] .../lua/vim/lsp.lua:1045	"notification"	"window/logMessage"	{  message = "[tsserver] [tsserver] [Trace  - 19:52:26.113] <semantic> Async response received: requestCompleted (3). Request took 2688 ms.",  type = 4}
[TRACE][2023-03-13 15:52:26] ...lsp/handlers.lua:519	"default_handler"	"window/logMessage"	{  ctx = '{\n  client_id = 1,\n  method = "window/logMessage"\n}',  result = {    message = "[tsserver] [tsserver] [Trace  - 19:52:26.113] <semantic> Async response received: requestCompleted (3). Request took 2688 ms.",    type = 4  }}
[INFO][2023-03-13 15:52:26] ...lsp/handlers.lua:489	"[tsserver] [tsserver] [Trace  - 19:52:26.113] <semantic> Async response received: requestCompleted (3). Request took 2688 ms."
[DEBUG][2023-03-13 15:52:26] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "textDocument/publishDiagnostics",  params = {    diagnostics = { {        code = 2339,        message = "Property 'toMatchExpectedTwoItemsArray' does not exist on type 'JestMatchers<number[]>'.",        range = {          ["end"] = {            character = 49,            line = 35          },          start = {            character = 21,            line = 35          }        },        severity = 1,        source = "typescript",        tags = {}      } },    uri = "file:///home/jfl/projects/jest-custom/tests/index.test.ts"  }}
[TRACE][2023-03-13 15:52:26] .../lua/vim/lsp.lua:1045	"notification"	"textDocument/publishDiagnostics"	{  diagnostics = { {      code = 2339,      message = "Property 'toMatchExpectedTwoItemsArray' does not exist on type 'JestMatchers<number[]>'.",      range = {        ["end"] = {          character = 49,          line = 35        },        start = {          character = 21,          line = 35        }      },      severity = 1,      source = "typescript",      tags = {}    } },  uri = "file:///home/jfl/projects/jest-custom/tests/index.test.ts"}
[TRACE][2023-03-13 15:52:26] ...lsp/handlers.lua:519	"default_handler"	"textDocument/publishDiagnostics"	{  ctx = '{\n  client_id = 1,\n  method = "textDocument/publishDiagnostics"\n}',  result = {    diagnostics = { {        code = 2339,        message = "Property 'toMatchExpectedTwoItemsArray' does not exist on type 'JestMatchers<number[]>'.",        range = {          ["end"] = {            character = 49,            line = 35          },          start = {            character = 21,            line = 35          }        },        severity = 1,        source = "typescript",        tags = {}      } },    uri = "file:///home/jfl/projects/jest-custom/tests/index.test.ts"  }}
[INFO][2023-03-13 15:52:27] .../lua/vim/lsp.lua:1807	"exit_handler"	{ {    _on_attach = <function 1>,    attached_buffers = {      [5] = true    },    cancel_request = <function 2>,    commands = {},    config = {      _on_attach = <function 3>,      autostart = true,      capabilities = {        callHierarchy = {          dynamicRegistration = false        },        textDocument = {          codeAction = {            codeActionLiteralSupport = {              codeActionKind = {                valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }              }            },            dataSupport = true,            dynamicRegistration = false,            isPreferredSupport = true,            resolveSupport = {              properties = { "edit" }            }          },          completion = {            completionItem = {              commitCharactersSupport = true,              deprecatedSupport = true,              documentationFormat = { "markdown", "plaintext" },              insertReplaceSupport = true,              insertTextModeSupport = {                valueSet = { 1, 2 }              },              labelDetailsSupport = true,              preselectSupport = true,              resolveSupport = {                properties = { "documentation", "detail", "additionalTextEdits" }              },              snippetSupport = true,              tagSupport = {                valueSet = { 1 }              }            },            completionItemKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }            },            completionList = {              itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }            },            contextSupport = true,            dynamicRegistration = false,            insertTextMode = 1          },          declaration = {            linkSupport = true          },          definition = {            linkSupport = true          },          documentHighlight = {            dynamicRegistration = false          },          documentSymbol = {            dynamicRegistration = false,            hierarchicalDocumentSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          hover = {            contentFormat = { "markdown", "plaintext" },            dynamicRegistration = false          },          implementation = {            linkSupport = true          },          publishDiagnostics = {            relatedInformation = true,            tagSupport = {              valueSet = { 1, 2 }            }          },          references = {            dynamicRegistration = false          },          rename = {            dynamicRegistration = false,            prepareSupport = true          },          signatureHelp = {            dynamicRegistration = false,            signatureInformation = {              activeParameterSupport = true,              documentationFormat = { "markdown", "plaintext" },              parameterInformation = {                labelOffsetSupport = true              }            }          },          synchronization = {            didSave = true,            dynamicRegistration = false,            willSave = false,            willSaveWaitUntil = false          },          typeDefinition = {            linkSupport = true          }        },        window = {          showDocument = {            support = false          },          showMessage = {            messageActionItem = {              additionalPropertiesSupport = false            }          },          workDoneProgress = true        },        workspace = {          applyEdit = true,          configuration = true,          symbol = {            dynamicRegistration = false,            hierarchicalWorkspaceSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          workspaceEdit = {            resourceOperations = { "rename", "create", "delete" }          },          workspaceFolders = true        }      },      cmd = { "/home/jfl/projects/typescript-language-server/lib/cli.mjs", "--stdio", "--log-level=4" },      cmd_cwd = "/home/jfl/projects/jest-custom",      filetypes = { "javascript", "javascriptreact", "javascript.jsx", "typescript", "typescriptreact", "typescript.tsx", "json" },      flags = {        debounce_text_changes = 150      },      get_language_id = <function 4>,      handlers = <1>{},      init_options = {        hostInfo = "neovim",        tsserver = {          logDirectory = "/home/jfl/projects/jest-custom/.log/",          logVerbosity = "verbose",          trace = "verbose"        }      },      log_level = 2,      message_level = 2,      name = "tsserver",      on_attach = <function 5>,      on_exit = <function 6>,      on_init = <function 7>,      root_dir = "/home/jfl/projects/jest-custom",      settings = vim.empty_dict(),      single_file_support = true,      workspace_folders = <2>{ {          name = "/home/jfl/projects/jest-custom",          uri = "file:///home/jfl/projects/jest-custom"        } },      <metatable> = <3>{        __tostring = <function 8>      }    },    handlers = <table 1>,    id = 1,    initialized = true,    is_stopped = <function 9>,    messages = {      messages = {},      name = "tsserver",      progress = {        ["1f8cab6e-6114-4ecc-aafe-8238990ea313"] = {          done = true,          title = "Initializing JS/TS language features…"        },        ["daeb57c9-c881-4597-abba-dfc6defd546f"] = {          done = true,          title = "Initializing JS/TS language features…"        }      },      status = {}    },    name = "tsserver",    notify = <function 10>,    offset_encoding = "utf-16",    request = <function 11>,    request_sync = <function 12>,    requests = {},    rpc = {      is_closing = <function 13>,      notify = <function 14>,      request = <function 15>,      terminate = <function 16>    },    server_capabilities = {      codeActionProvider = {        codeActionKinds = { "source.fixAll.ts", "source.removeUnused.ts", "source.addMissingImports.ts", "source.organizeImports.ts", "source.removeUnusedImports.ts", "source.sortImports.ts", "quickfix", "refactor" }      },      completionProvider = {        resolveProvider = true,        triggerCharacters = { ".", '"', "'", "/", "@", "<" }      },      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { "_typescript.applyWorkspaceEdit", "_typescript.applyCodeAction", "_typescript.applyRefactoring", "_typescript.configurePlugin", "_typescript.organizeImports", "_typescript.applyRenameFile", "_typescript.goToSourceDefinition" }      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      inlayHintProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = true,        legend = {          tokenModifiers = { "declaration", "static", "async", "readonly", "defaultLibrary", "local" },          tokenTypes = { "class", "enum", "interface", "namespace", "typeParameter", "type", "parameter", "variable", "enumMember", "property", "function", "member" }        },        range = true      },      signatureHelpProvider = {        retriggerCharacters = { ")" },        triggerCharacters = { "(", ",", "<" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = {          includeText = false        },        willSave = false,        willSaveWaitUntil = false      },      typeDefinitionProvider = true,      workspace = {        fileOperations = {          willRename = {            filters = { {                pattern = {                  glob = "**/*.{ts,js,jsx,tsx,mjs,mts,cjs,cts}",                  matches = "file"                },                scheme = "file"              } }          }        }      },      workspaceSymbolProvider = true    },    stop = <function 17>,    supports_method = <function 18>,    workspaceFolders = <table 2>,    workspace_did_change_configuration = <function 19>,    workspace_folders = <table 2>,    <metatable> = {      __index = <function 20>    }  }, {    _on_attach = <function 21>,    attached_buffers = {      [5] = true    },    cancel_request = <function 22>,    commands = {},    config = {      cmd = <function 23>,      filetypes = { "sh", "javascriptreact", "typescriptreact", "vue", "javascript", "typescript", "css", "html", "graphql", "handlebars", "less", "markdown.mdx", "yaml", "jsonc", "markdown", "json", "scss", "go", "lua", "python" },      flags = {        debounce_text_changes = 250      },      get_language_id = <function 24>,      name = "null-ls",      on_attach = <function 25>,      on_exit = <function 26>,      on_init = <function 27>,      root_dir = "/home/jfl/projects/jest-custom",      settings = {}    },    handlers = {},    id = 2,    initialized = true,    is_stopped = <function 28>,    messages = {      messages = {},      name = "null-ls",      progress = { {          done = true,          percentage = 0,          title = "diagnostics_on_open"        }, {          done = true,          percentage = 0,          title = "diagnostics_on_open"        } },      status = {}    },    name = "null-ls",    notify = <function 29>,    offset_encoding = "utf-16",    request = <function 30>,    request_sync = <function 31>,    requests = {},    rpc = {      is_closing = <function 32>,      notify = <function 33>,      request = <function 34>,      terminate = <function 35>    },    server_capabilities = {      codeActionProvider = {        resolveProvider = false      },      completionProvider = {        allCommitCharacters = {},        completionItem = {          labelDetailsSupport = true        },        resolveProvider = false,        triggerCharacters = { ".", ":", "-" }      },      documentFormattingProvider = true,      documentRangeFormattingProvider = true,      executeCommandProvider = true,      hoverProvider = true,      textDocumentSync = {        change = 1,        openClose = true,        save = {          includeText = true        }      }    },    stop = <function 36>,    supports_method = <function 37>,    workspaceFolders = <4>{ {        name = "/home/jfl/projects/jest-custom",        uri = "file:///home/jfl/projects/jest-custom"      } },    workspace_folders = <table 4>,    <metatable> = {      __index = <function 38>    }  } }
[DEBUG][2023-03-13 15:52:27] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 2,  jsonrpc = "2.0",  method = "shutdown"}
[DEBUG][2023-03-13 15:52:27] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 2,  jsonrpc = "2.0"}
[DEBUG][2023-03-13 15:52:27] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "exit"}
